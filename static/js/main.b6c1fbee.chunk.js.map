{"version":3,"sources":["shared/project.js","shared/index.js","Providers.js","utils/routing.js","dashboard/index.js","test/ids.js","NotFound.js","shared/Loader.js","project/sections/Prose.js","shared/SortableList.js","project/sections/ImageCollection/index.js","project/sections/Animation/index.js","project/ProjectSection.js","project/ProjectOverview.js","project/ProjectSectionForm.js","project/ProjectSettings.js","project/index.js","test/fixtures.js","App.js","serviceWorker.js","index.js"],"names":["TYPE_IMAGE_COLLECTION","TYPE_PROSE","TYPE_MOTION","SECTION_TYPES","SECTION_SUB_TYPES","SECTION_CONFIG","_SECTION_CONFIG","Object","defineProperty","SECTION_TYPE_NAMES","_SECTION_TYPE_NAMES","SECTION_SUB_TYPE_NAMES","_SECTION_SUB_TYPE_NAM","projectSectionTypes","PropTypes","oneOf","projectSectionSubTypes","projectSectionShape","shape","id","string","name","type","isRequired","subtype","projectMessages","sections","arrayOf","overviewLink","PROJECT_SECTIONS_DEFAULT","slugify","key","PROJECTS_STORE_KEY","concat","DEFAULT_PROJECTS_STORE","getProjects","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","store","wrap","_context","prev","next","localForage","getItem","sent","setItem","abrupt","t0","stop","apply","this","arguments","saveProjects","projects","authRedirect","homepage","createDropboxProvider","clientId","DropboxProvider","DropboxContext","useDropboxClient","Providers","children","react_default","createElement","makeRoutePath","path","basePath","process","messages","projectNameLabel","projectNamePlaceholder","noProjects","createProject","removeProject","removeProjectAriaLabel","errorProjectNameTaken","generateRemoveButtonAriaLabel","replace","ProjectCard","es","to","aria-label","onClick","projectNameErrorId","ProjectForm","_ref2","addProject","validateProject","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","projectNameError","setProjectNameError","onSubmit","e","preventDefault","projectData","validationResult","htmlFor","aria-describedby","aria-invalid","className","placeholder","onChange","target","style","color","message","Dashboard","_ref3","setProjects","filter","project","length","map","assign","toConsumableArray","_ref4","find","p","PROJECT_SECTION","PROJECT_SECTION_NAV","NotFound","Loader","TextEditor","React","lazy","Promise","all","__webpack_require__","then","bind","ProjectProseSection","props","react","fallback","shared_Loader","DragHandle","SortableHandle","border","cursor","padding","display","SortableItem","SortableElement","_ref$renderItem","renderItem","SortableList","SortableContainer","items","_ref2$listStyle","listStyle","restProps","objectWithoutProperties","index","demoItems","SortableDragHandleList","_ref3$axis","axis","_ref3$defaultItems","defaultItems","_ref3$onReorder","onReorder","setItems","useEffect","newItems","difference","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","generateRenderItem","removeFile","file","url","preview","title","description","maxWidth","position","src","alt","height","flexWrap","INPUT_ID","useFileDrop","initialState","isFileDropActive","setIsActive","FilesDropZone","onDrop","_useFileDrop","onDropCapture","ev","files","dataTransfer","kind","f","getAsFile","onDragOverCapture","onDragLeaveCapture","background","uploadNewFiles","_callee2","_ref5","newFiles","collection","save","uploadImage","newUploads","idToUrlMap","nextCollection","_context2","_ref7","reduce","acc","_ref8","objectSpread","item","remoteUrl","uploaded","ImageCollection","defaultCollection","setCollection","_useState5","_useState6","isSaving","setIsSaving","_useState7","_useState8","error","setError","_useState9","_useState10","isPendingChanges","setIsPendingChanges","updateCollection","newCollection","isPending","isEqual","checkIfPendingChanges","addFilesToCollection","imagesToUpload","uniqueId","URL","createObjectURL","_saveCollection","catch","i","accept","multiple","_ref6","disabled","FolderPicker","onSelectFolder","selectedFolderId","folders","setFolders","client","_listFiles","result","filesListFolder","entries","listFiles","undefined","defaultProps","console","log","reducer","state","nextState","AnimationSection","defaultSelectedFolder","selectedFolder","defaultFiles","defaultSettings","isSaveDisabled","setIsSaveDisabled","_useReducer","useReducer","_useReducer2","settings","updateSettings","folder","onReceiveFolderFiles","_listFiles2","_callee3","sortedFiles","_context3","path_display","sharingCreateSharedLink","parseInt","exec","_x","sort","b","useListFolderFiles","Array","isArray","width","ProjectSection","updateProjectSection","update","data-testid","renderSectionContent","ProjectOverview","details","newProjectSectionNameLabel","newProjectSectionNamePlaceholder","saveNewProjectSectionButtonLabel","NAME_SECTION_TYPE","NAME_SECTION_SUB_TYPE","isTypeSelected","isSubTypeSelected","oldState","newState","ProjectSectionForm","saveNewSection","setState","setSubType","subtypes","checked","setType","cancel","saveChanges","ProjectSettings","updateProject","toggleEditing","projectState","updateProjectState","newSection","getProjectbyId","createSelector","projectId","Project","isEditingSections","setEditingSections","src_NotFound","projectNavigation","projectSettings","default","section","lastProjectsState","split","toUpperCase","HOME_PATH","Home","AccountNav","authUrl","logout","userInfo","setUserInfo","window","history","pushState","document","location","pathname","search","usersGetCurrentAccount","familiar_name","borderRadius","with","profile_photo_url","display_name","href","App","_ref2$defaultProjects","defaultProjects","demoProjects","debugState","setDebugState","db","updateDatabase","projectUpdate","data","App_Home","sectionId","s","editorContent","float","JSON","stringify","Boolean","hostname","match","rootEl","getElementById","PresentationPanel","LandingPage","ReactDOM","render","_useDropboxClient2","readDatabase","database","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6c1fbee.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport localForage from 'localforage';\nimport PropTypes from 'prop-types';\nimport slugify from '@sindresorhus/slugify';\nimport { useDropboxClient } from '.';\n\nexport const TYPE_IMAGE_COLLECTION = 'imageCollection';\nexport const TYPE_PROSE = 'prose';\nexport const TYPE_MOTION = 'motion';\n\nexport const SUBTYPE_MOOD_BOARD = 'moodBoard';\nexport const SUBTYPE_STORY_BOARD = 'storyBoard';\nexport const SUBTYPE_STYLE_FRAMES = 'styleFrames';\n\nexport const SECTION_TYPES = [TYPE_IMAGE_COLLECTION, TYPE_PROSE, TYPE_MOTION];\nexport const SECTION_SUB_TYPES = [\n  SUBTYPE_MOOD_BOARD,\n  SUBTYPE_STORY_BOARD,\n  SUBTYPE_STYLE_FRAMES,\n];\nexport const SECTION_CONFIG = {\n  [TYPE_PROSE]: TYPE_PROSE,\n  [TYPE_MOTION]: TYPE_MOTION,\n  [TYPE_IMAGE_COLLECTION]: [\n    SUBTYPE_MOOD_BOARD,\n    SUBTYPE_STORY_BOARD,\n    SUBTYPE_STYLE_FRAMES,\n  ],\n};\n\nexport const DEFAULT_PROSE_NAME = 'Script';\nexport const DEFAULT_IMAGE_COLLECTION_NAME = 'Image collection';\nexport const DEFAULT_MOOD_BOARD_NAME = 'Mood board';\nexport const DEFAULT_STORY_BOARD_NAME = 'Story board';\nexport const DEFAULT_STYLE_FRAMES_NAME = 'Style frames';\nexport const DEFAULT_MOTION_NAME = 'Animation';\n\nexport const SECTION_TYPE_NAMES = {\n  [TYPE_IMAGE_COLLECTION]: DEFAULT_IMAGE_COLLECTION_NAME,\n  [TYPE_PROSE]: DEFAULT_PROSE_NAME,\n  [TYPE_MOTION]: DEFAULT_MOTION_NAME,\n};\n\nexport const SECTION_SUB_TYPE_NAMES = {\n  [SUBTYPE_MOOD_BOARD]: DEFAULT_MOOD_BOARD_NAME,\n  [SUBTYPE_STORY_BOARD]: DEFAULT_STORY_BOARD_NAME,\n  [SUBTYPE_STYLE_FRAMES]: DEFAULT_STYLE_FRAMES_NAME,\n};\n\nexport const projectSectionTypes = PropTypes.oneOf(SECTION_TYPES);\nexport const projectSectionSubTypes = PropTypes.oneOf(SECTION_SUB_TYPES);\n\nexport const projectSectionShape = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  type: projectSectionTypes.isRequired,\n  subtype: projectSectionSubTypes,\n});\n\nexport const projectShape = PropTypes.shape({\n  name: PropTypes.string,\n  sections: PropTypes.arrayOf(projectSectionShape),\n});\n\nexport const projectMessages = {\n  overviewLink: 'Overview',\n};\n\nexport const PROJECT_SECTIONS_DEFAULT = [\n  {\n    id: slugify(DEFAULT_PROSE_NAME),\n    name: DEFAULT_PROSE_NAME,\n    type: TYPE_PROSE,\n  },\n  {\n    id: slugify(DEFAULT_MOOD_BOARD_NAME),\n    name: DEFAULT_MOOD_BOARD_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_MOOD_BOARD,\n  },\n  {\n    id: slugify(DEFAULT_STORY_BOARD_NAME),\n    name: DEFAULT_STORY_BOARD_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_STORY_BOARD,\n  },\n  {\n    id: slugify(DEFAULT_STYLE_FRAMES_NAME),\n    name: DEFAULT_STYLE_FRAMES_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_STYLE_FRAMES,\n  },\n  {\n    id: slugify(DEFAULT_MOTION_NAME),\n    name: DEFAULT_MOTION_NAME,\n    type: TYPE_MOTION,\n  },\n];\n\nexport function createProjectWithDefaults(name) {\n  return {\n    id: slugify(name),\n    name,\n    sections: PROJECT_SECTIONS_DEFAULT,\n  };\n}\n\nconst NAMESPACE = 'anni-pma-';\nconst prefixKey = key => `${NAMESPACE}${key}`;\nconst PROJECTS_STORE_KEY = prefixKey('projects');\nconst DEFAULT_PROJECTS_STORE = [];\n\nexport const getProjects = async () => {\n  try {\n    const store = await localForage.getItem(PROJECTS_STORE_KEY);\n    if (!store) {\n      await localForage.setItem(PROJECTS_STORE_KEY, DEFAULT_PROJECTS_STORE);\n      return DEFAULT_PROJECTS_STORE;\n    }\n    return store;\n  } catch (e) {}\n};\n\nexport function saveProjects(projects) {\n  if (projects) {\n    return localForage.setItem(PROJECTS_STORE_KEY, projects);\n  }\n}\n\nfunction updateProjectById(projects, projectUpdate) {\n  return projects.map(project => {\n    if (project.id === projectUpdate.id) {\n      return {\n        ...project,\n        ...projectUpdate,\n      };\n    }\n    return project;\n  });\n}\n\nlet lastProjectsState;\n\nexport function useProjectManager(defaultProjects) {\n  const { updateDatabase } = useDropboxClient();\n  const [projects, setProjects] = useState(defaultProjects);\n\n  function updateProject(projectUpdate) {\n    setProjects(updateProjectById(projectUpdate));\n  }\n\n  useEffect(() => {\n    if (!isEqual(lastProjectsState, projects)) {\n      saveProjects(projects);\n      updateDatabase({ data: { projects } });\n      lastProjectsState = projects;\n    }\n  });\n\n  return {\n    updateProject,\n  };\n}\n","import createDropboxProvider from 'dbdbdb-provider';\nimport { homepage } from '../../package.json';\nexport * from './project';\nconst authRedirect =\n  process.env.NODE_ENV === 'production' ? homepage : undefined;\n\nexport const {\n  DropboxContext,\n  DropboxProvider,\n  useDropboxClient,\n} = createDropboxProvider({\n  clientId: 'swbiv6r9kwfs4os',\n  authRedirect,\n});\n","import React from 'react';\nimport { DropboxProvider } from 'shared';\n\nexport default function Providers({ children }) {\n  return <DropboxProvider>{children}</DropboxProvider>;\n}\n","export const makeRoutePath = path => {\n  const basePath = process.env.PUBLIC_URL;\n\n  if (path === '/') {\n    return `${basePath}/`;\n  }\n\n  return `${basePath}/${path}/`;\n};\n","import React, { useState } from 'react';\nimport { Link } from '@reach/router';\nimport { makeRoutePath } from 'utils/routing';\nimport { createProjectWithDefaults } from 'shared';\n\nexport const messages = {\n  projectNameLabel: 'Project name',\n  projectNamePlaceholder: 'Project B',\n  noProjects: 'No projects',\n  createProject: 'Create project',\n  removeProject: 'Remove project',\n  removeProjectAriaLabel: 'Remove {name} project',\n  errorProjectNameTaken: 'Sorry, that project name is already taken.',\n};\n\nexport const generateRemoveButtonAriaLabel = name =>\n  messages.removeProjectAriaLabel.replace(/\\{.*?\\}/, name);\n\nfunction ProjectCard({ id, name, removeProject }) {\n  return (\n    <div>\n      <h3>\n        <Link to={makeRoutePath(id)}>{name}</Link>\n      </h3>\n      <button\n        aria-label={generateRemoveButtonAriaLabel(name)}\n        onClick={() => removeProject(name)}\n      >\n        {messages.removeProject}\n      </button>\n    </div>\n  );\n}\n\nconst projectNameErrorId = 'projectNameErrorId';\nfunction ProjectForm({ addProject, validateProject }) {\n  const [value, setValue] = useState('');\n  const [projectNameError, setProjectNameError] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    const projectData = createProjectWithDefaults(value);\n    const validationResult = validateProject(projectData);\n    if (validationResult === null) {\n      addProject(projectData);\n      setValue('');\n    } else {\n      setProjectNameError(validationResult);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"projectName\">\n        {messages.projectNameLabel}\n        <input\n          aria-describedby={projectNameError && projectNameErrorId}\n          aria-invalid={!!projectNameError ? true : null}\n          id=\"projectName\"\n          type=\"text\"\n          className=\"input\"\n          placeholder={messages.projectNamePlaceholder}\n          value={value}\n          onChange={e => {\n            setProjectNameError(null);\n            setValue(e.target.value);\n          }}\n        />\n      </label>\n      {projectNameError && (\n        <p style={{ color: 'magenta' }} id={projectNameErrorId}>\n          {projectNameError.message}\n        </p>\n      )}\n      <button type=\"submit\">{messages.createProject}</button>\n    </form>\n  );\n}\n\nexport default function Dashboard({ projects, setProjects }) {\n  const addProject = project => setProjects([...projects, project]);\n  const removeProject = name =>\n    setProjects(projects.filter(project => project.name !== name));\n\n  function validateProject({ name }) {\n    if (projects.find(p => p.name === name)) {\n      return {\n        message: messages.errorProjectNameTaken,\n      };\n    }\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Projects</h2>\n      {projects.length === 0 && <p>{messages.noProjects}</p>}\n      {projects.map(project => (\n        <ProjectCard\n          {...project}\n          key={project.name}\n          removeProject={removeProject}\n        />\n      ))}\n      <ProjectForm addProject={addProject} validateProject={validateProject} />\n    </div>\n  );\n}\n","export const PROJECT_SECTION = 'PROJECT_SECTION';\nexport const PROJECT_SECTION_NAV = 'PROJECT_SECTION_NAV';\n","import React from 'react';\n\nexport const messages = {\n  title: '404 - Page not found',\n};\nexport const NotFound = () => (\n  <div>\n    <h1>{messages.title}</h1>\n  </div>\n);\nexport default NotFound;\n","import React from 'react';\n\nconst Loader = () => <div>Loading...</div>;\n\nexport default Loader;\n","import React, { Suspense } from 'react';\nimport Loader from 'shared/Loader';\n\nconst TextEditor = React.lazy(() => import('shared/TextEditor'));\n\nexport default function ProjectProseSection(props) {\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        <TextEditor {...props} />\n      </Suspense>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport difference from 'lodash/difference';\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle,\n  arrayMove,\n} from 'react-sortable-hoc';\n\nconst DragHandle = SortableHandle(() => (\n  <span\n    style={{\n      border: '1px dotted gold',\n      cursor: 'grab',\n      padding: 8,\n      display: 'inline-block',\n    }}\n  >\n    :::\n  </span>\n)); // This can be any component you want\n\nconst SortableItem = SortableElement(\n  ({ renderItem = () => 'feed me', value }) => {\n    return (\n      <li>\n        <DragHandle />\n        {typeof renderItem === 'string' ? value : renderItem(value)}\n      </li>\n    );\n  }\n);\n\nconst SortableList = SortableContainer(\n  ({ items, listStyle = {}, ...restProps }) => {\n    return (\n      <ul style={listStyle}>\n        {items.map((value, index) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            value={value}\n            {...restProps}\n          />\n        ))}\n      </ul>\n    );\n  }\n);\n\nconst demoItems = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6'];\n\nexport default function SortableDragHandleList({\n  axis = 'y',\n  defaultItems = demoItems,\n  onReorder = () => null,\n  ...restProps\n}) {\n  const [items, setItems] = useState(defaultItems);\n\n  useEffect(() => {\n    const newItems = difference(defaultItems, items);\n    if (newItems.length > 0) {\n      setItems([...items, ...newItems]);\n    }\n  });\n\n  useEffect(\n    () => {\n      if (defaultItems !== items) {\n        setItems(defaultItems);\n      }\n    },\n    [defaultItems]\n  );\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const newItems = arrayMove(items, oldIndex, newIndex);\n    onReorder(newItems);\n    setItems(newItems);\n  };\n\n  return (\n    <SortableList\n      {...restProps}\n      axis={axis}\n      items={items}\n      onSortEnd={onSortEnd}\n      useDragHandle={true}\n    />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport SortableList from 'shared/SortableList';\n\nfunction generateRenderItem({ removeFile }) {\n  return function({ file, id, url, preview, title, description }) {\n    return (\n      <figure style={{ maxWidth: 300, position: 'relative' }}>\n        <img\n          src={url || preview}\n          alt={title || description || (file && file.name)}\n          style={{ maxWidth: '100%', height: 'auto' }}\n        />\n        <figcaption>{description}</figcaption>\n        <button onClick={() => removeFile(id)}>× delete</button>\n      </figure>\n    );\n  };\n}\n\nconst listStyle = {\n  display: 'flex',\n  flexWrap: 'wrap',\n};\n\nconst INPUT_ID = 'imageCollectionUploadInput';\n\nfunction useFileDrop(initialState) {\n  const [isFileDropActive, setIsActive] = useState(initialState);\n\n  return { isFileDropActive, setIsActive };\n}\n\nfunction FilesDropZone({ children, onDrop }) {\n  const { isFileDropActive, setIsActive } = useFileDrop(false);\n  function dropHandler(ev) {\n    ev.preventDefault();\n\n    // Prevent default behavior (Prevent file from being opened)\n    ev.preventDefault();\n\n    let files;\n\n    if (ev.dataTransfer.items) {\n      files = [...ev.dataTransfer.items]\n        .filter(({ kind }) => kind === 'file')\n        .map(f => f.getAsFile());\n    } else {\n      files = [...ev.dataTransfer.files];\n    }\n\n    if (files) {\n      onDrop(files);\n    }\n  }\n\n  return (\n    <div\n      onDropCapture={dropHandler}\n      onDragOverCapture={e => {\n        e.preventDefault();\n        setIsActive(true);\n      }}\n      onDragLeaveCapture={() => setIsActive(false)}\n      style={{\n        padding: 8,\n        background: isFileDropActive ? 'MediumSpringGreen' : 'transparent',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nasync function uploadNewFiles({ newFiles, collection, save, uploadImage }) {\n  const newUploads = await Promise.all(\n    newFiles.map(({ file }) => uploadImage({ file }))\n  );\n  const idToUrlMap = newUploads.reduce(\n    (acc, { url }, index) => ({\n      ...acc,\n      [newFiles[index].id]: url,\n    }),\n    {}\n  );\n\n  const nextCollection = collection.map(item => {\n    const remoteUrl = idToUrlMap[item.id];\n    if (remoteUrl) {\n      return {\n        ...item,\n        url: remoteUrl,\n        uploaded: true,\n      };\n    } else {\n      return item;\n    }\n  });\n\n  save({ collection: nextCollection });\n}\n\nexport default function ImageCollection(props) {\n  const { collection: defaultCollection, save } = props;\n  const [collection, setCollection] = useState(defaultCollection || []);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPendingChanges, setIsPendingChanges] = useState(false);\n  const { isFileDropActive } = useFileDrop();\n\n  const checkIfPendingChanges = nextCollection => {\n    const isPending = !isEqual(defaultCollection, nextCollection || collection);\n    setIsPendingChanges(isPending);\n    return isPending;\n  };\n\n  const updateCollection = newCollection => {\n    if (newCollection && checkIfPendingChanges(newCollection)) {\n      setCollection(newCollection);\n    }\n  };\n\n  useEffect(\n    () => {\n      updateCollection(defaultCollection);\n    },\n    [defaultCollection]\n  );\n\n  function addFilesToCollection(files) {\n    const imagesToUpload = files.map(file => ({\n      id: uniqueId(file.name),\n      name: file.name,\n      file,\n      preview: URL.createObjectURL && URL.createObjectURL(file),\n      uploaded: false,\n    }));\n    updateCollection([...collection, ...imagesToUpload]);\n  }\n\n  function removeFile(id) {\n    updateCollection(collection.filter(i => i.id !== id));\n  }\n\n  function onUploadImage({ target }) {\n    addFilesToCollection([...target.files]);\n  }\n\n  async function saveCollection() {\n    setError(null);\n    const newFiles = collection.filter(f => !f.uploaded);\n\n    if (newFiles.length) {\n      setIsSaving(true);\n      await uploadNewFiles({\n        ...props,\n        collection,\n        newFiles,\n        save,\n      }).catch(setError);\n      setIsSaving(false);\n    } else if (!isEqual(defaultCollection, collection)) {\n      save({ collection });\n    }\n  }\n\n  return (\n    <FilesDropZone onDrop={addFilesToCollection}>\n      {collection.length > 0 ? (\n        <SortableList\n          axis=\"xy\"\n          defaultItems={collection}\n          listStyle={listStyle}\n          onReorder={updateCollection}\n          renderItem={generateRenderItem({ removeFile })}\n        />\n      ) : (\n        <p>No images.</p>\n      )}\n      <label htmlFor={INPUT_ID}>\n        Upload image {isFileDropActive && 'ACTIVE!'}\n      </label>\n      <input\n        id={INPUT_ID}\n        name={INPUT_ID}\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        multiple\n        onChange={onUploadImage}\n      />\n      {isSaving ? (\n        'Saving...'\n      ) : (\n        <button disabled={!isPendingChanges} onClick={saveCollection}>\n          Save\n        </button>\n      )}\n      {error && <p style={{ color: 'red' }}>{error.message}</p>}\n    </FilesDropZone>\n  );\n}\n\nImageCollection.propTypes = {\n  defaultCollection: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n    })\n  ),\n  uploadImage: PropTypes.func.isRequired,\n  save: PropTypes.func,\n};\n\nImageCollection.defaultProps = {\n  uploadImage: console.log,\n};\n","import React, { useEffect, useState, useReducer } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Loader from 'shared/Loader';\nimport { useDropboxClient } from 'shared';\n\nfunction FolderPicker({ onSelectFolder, selectedFolderId }) {\n  const [folders, setFolders] = useState(null);\n  const { client } = useDropboxClient();\n\n  useEffect(() => {\n    async function listFiles() {\n      const result = await client.filesListFolder({\n        path: '',\n      });\n      const folders = result.entries.filter(\n        e => e['.tag'] === 'folder' && e.name !== 'images'\n      );\n      setFolders(folders);\n    }\n    listFiles();\n  }, []);\n\n  return folders === null ? (\n    <Loader />\n  ) : (\n    <select\n      onChange={({ target }) =>\n        onSelectFolder(folders.find(f => f.id === target.value))\n      }\n      value={selectedFolderId}\n    >\n      <option value={undefined}>\n        {' '}\n        -- select an animation folder or video file --{' '}\n      </option>\n      {folders.map(({ id, name }) => (\n        <option key={id} value={id}>\n          {name}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nfunction useListFolderFiles(folder, onReceiveFolderFiles) {\n  const [files, setItems] = useState(null);\n  const { client } = useDropboxClient();\n\n  useEffect(\n    () => {\n      async function listFiles() {\n        const result = await client.filesListFolder({\n          path: folder.path_display,\n        });\n        const files = await Promise.all(\n          result.entries.map(async f => {\n            const file = await client.sharingCreateSharedLink({\n              path: f.path_display,\n            });\n            return {\n              ...f,\n              ...file,\n              index: parseInt(/\\d+/g.exec(f.name)[0], 10),\n              url: file.url.replace(/.$/, '1'),\n            };\n          })\n        );\n        const sortedFiles = files.sort((a, b) => a.index - b.index);\n        setItems(sortedFiles);\n      }\n      if (folder) listFiles();\n    },\n    [folder]\n  );\n\n  useEffect(\n    () => {\n      onReceiveFolderFiles(files);\n    },\n    [files]\n  );\n}\n\nconst reducer = (state, nextState) => ({ ...state, ...nextState });\n\nexport default function AnimationSection({\n  save,\n  selectedFolder: defaultSelectedFolder,\n  files: defaultFiles,\n  ...restProps\n}) {\n  const defaultSettings = {\n    selectedFolder: defaultSelectedFolder,\n    files: defaultFiles,\n  };\n  const [isSaveDisabled, setIsSaveDisabled] = useState(true);\n  const [settings, updateSettings] = useReducer(reducer, defaultSettings);\n  const { selectedFolder, files } = settings;\n  useListFolderFiles(selectedFolder || defaultSelectedFolder, files =>\n    updateSettings({ files })\n  );\n\n  useEffect(\n    () => {\n      setIsSaveDisabled(isEqual(defaultSettings, settings));\n    },\n    [settings]\n  );\n\n  return (\n    <div>\n      <FolderPicker\n        onSelectFolder={selectedFolder =>\n          updateSettings({ selectedFolder, files: null })\n        }\n        selectedFolderId={\n          selectedFolder ? selectedFolder.id : defaultSelectedFolder\n        }\n      />\n      {selectedFolder &&\n        (Array.isArray(files) ? (\n          <ul style={{ display: 'flex', flexWrap: 'wrap', listStyle: 'none' }}>\n            {files.map(f => (\n              <li key={f.id}>\n                <img src={f.url} width={100} alt={f.name} />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <Loader />\n        ))}\n      <button\n        disabled={isSaveDisabled}\n        onClick={() => save(settings)}\n        title={isSaveDisabled ? 'No changes to save' : null}\n      >\n        Save animation\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  projectSectionTypes,\n  projectSectionSubTypes,\n  projectShape,\n  TYPE_PROSE,\n  TYPE_IMAGE_COLLECTION,\n  TYPE_MOTION,\n} from 'shared';\nimport { PROJECT_SECTION } from 'test/ids';\nimport ProseSection from './sections/Prose';\nimport ImageCollection from './sections/ImageCollection';\nimport Animation from './sections/Animation';\n\nfunction renderSectionContent(type, props) {\n  switch (type) {\n    case TYPE_PROSE:\n      return <ProseSection {...props} />;\n    case TYPE_IMAGE_COLLECTION:\n      return <ImageCollection {...props} />;\n    case TYPE_MOTION:\n      return <Animation {...props} />;\n    default:\n      return <div>Section content pending for type: {type}</div>;\n  }\n}\n\nexport default function ProjectSection({ updateProjectSection, ...restProps }) {\n  const { id, name, project, subtype, type } = restProps;\n  const props = {\n    ...restProps,\n    save: update => updateProjectSection(project.id, id, update),\n  };\n  return (\n    <div data-testid={PROJECT_SECTION}>\n      <h1>\n        {project.name} - {name}\n      </h1>\n      {renderSectionContent(type, props)}\n      {subtype && ` - ${subtype}`}\n    </div>\n  );\n}\n\nProjectSection.propTypes = {\n  name: PropTypes.string,\n  project: projectShape,\n  subtype: projectSectionSubTypes,\n  type: projectSectionTypes,\n};\n","import React from 'react';\nimport { PROJECT_SECTION } from 'test/ids';\nimport { projectShape } from 'shared';\n\nexport default function ProjectOverview({ project }) {\n  return (\n    <div data-testid={PROJECT_SECTION}>\n      <h1>{project.name}</h1>\n      <p>{project.details}</p>\n    </div>\n  );\n}\n\nProjectOverview.propTypes = {\n  project: projectShape,\n};\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport slugify from '@sindresorhus/slugify';\nimport {\n  projectShape,\n  SECTION_CONFIG,\n  SECTION_TYPE_NAMES,\n  SECTION_SUB_TYPE_NAMES,\n  TYPE_IMAGE_COLLECTION,\n  SUBTYPE_MOOD_BOARD,\n} from 'shared';\n\nexport const messages = {\n  newProjectSectionNameLabel: 'New project section name',\n  newProjectSectionNamePlaceholder: 'Section name',\n  saveNewProjectSectionButtonLabel: 'Add new project section',\n};\n\nexport const NAME_SECTION_TYPE = 'type';\nexport const NAME_SECTION_SUB_TYPE = 'subtype';\nexport const DEFAULT_TYPE = TYPE_IMAGE_COLLECTION;\nexport const DEFAULT_SUB_TYPE = SUBTYPE_MOOD_BOARD;\n\nconst initialState = {\n  name: '',\n  type: DEFAULT_TYPE,\n  subtype: DEFAULT_SUB_TYPE,\n};\n\nconst isTypeSelected = (type, state) => type === state.type;\nconst isSubTypeSelected = (type, state) => type === state.subtype;\n\nconst reducer = (oldState, newState) => ({ ...oldState, ...newState });\n\nexport default function ProjectSectionForm({ saveNewSection }) {\n  const [state, setState] = useReducer(reducer, initialState);\n  const setName = name => setState({ name });\n  const setSubType = subtype => setState({ subtype });\n  const setType = type => {\n    setState({ type });\n    setSubType(\n      Array.isArray(SECTION_CONFIG[type]) ? SECTION_CONFIG[type][0] : null\n    );\n  };\n  function onSubmit(e) {\n    e.preventDefault();\n    saveNewSection({ ...state, id: slugify(state.name) });\n    setState(initialState);\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        {messages.newProjectSectionNameLabel}\n        <input\n          value={state.name}\n          onChange={({ target }) => setName(target.value)}\n          name=\"newProjectSectionName\"\n          placeholder={messages.newProjectSectionNamePlaceholder}\n        />\n      </label>\n      <ul>\n        {Object.entries(SECTION_CONFIG).map(([type, subtypes]) => (\n          <li key={type}>\n            <label>\n              <input\n                checked={isTypeSelected(type, state)}\n                type=\"radio\"\n                name={NAME_SECTION_TYPE}\n                onChange={() => setType(type)}\n                value={type}\n              />\n              {SECTION_TYPE_NAMES[type]}\n            </label>\n            {isTypeSelected(type, state) && Array.isArray(subtypes) && (\n              <ul>\n                {subtypes.map(subtype => (\n                  <li key={subtype}>\n                    <label>\n                      <input\n                        checked={isSubTypeSelected(subtype, state)}\n                        type=\"radio\"\n                        name={NAME_SECTION_SUB_TYPE}\n                        onChange={() => setSubType(subtype)}\n                        value={type}\n                      />\n                      {SECTION_SUB_TYPE_NAMES[subtype]}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n      <button type=\"submit\">{messages.saveNewProjectSectionButtonLabel}</button>\n    </form>\n  );\n}\n\nProjectSectionForm.propTypes = {\n  project: projectShape,\n  saveNewSection: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { projectShape } from 'shared';\nimport SortableList from 'shared/SortableList';\nimport ProjectSectionForm from 'project/ProjectSectionForm';\n\nconst messages = {\n  cancel: 'Cancel',\n  saveChanges: 'Save Changes',\n};\n\nexport default function ProjectSettings({\n  project,\n  updateProject,\n  toggleEditing,\n}) {\n  const [projectState, updateProjectState] = useState(project);\n  const { sections } = projectState;\n  function saveChanges() {\n    updateProject(projectState);\n    toggleEditing();\n  }\n  return (\n    <div>\n      <SortableList\n        defaultItems={sections}\n        onReorder={sections => updateProjectState({ ...project, sections })}\n        renderItem={({ name }) => <strong>{name}</strong>}\n      />\n      <ProjectSectionForm\n        project={projectState}\n        saveNewSection={newSection => {\n          updateProjectState({\n            id: project.id,\n            sections: [...sections, newSection],\n          });\n        }}\n      />\n      <button onClick={saveChanges}>{messages.saveChanges}</button>\n      <button onClick={toggleEditing}>{messages.cancel}</button>\n    </div>\n  );\n}\n\nProjectSettings.propTypes = {\n  project: projectShape,\n  toggleEditing: PropTypes.func.isRequired,\n  updateProject: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { Router, Link } from '@reach/router';\nimport { PROJECT_SECTION_NAV } from 'test/ids';\nimport { projectMessages } from 'shared';\nimport NotFound from 'NotFound';\nimport ProjectSection from 'project/ProjectSection';\nimport ProjectOverview from 'project/ProjectOverview';\nimport ProjectSettings from 'project/ProjectSettings';\n\nconst getProjectbyId = createSelector(\n  props => props.projects,\n  props => props.projectId,\n  (projects, projectId) => projects.find(({ id }) => id === projectId)\n);\n\nexport default function Project(props) {\n  const [isEditingSections, setEditingSections] = useState(false);\n  const project = getProjectbyId(props);\n  const { updateProject, updateProjectSection, uploadImage } = props;\n\n  if (!project) return <NotFound />;\n\n  const projectNavigation = (\n    <ul data-testid={PROJECT_SECTION_NAV}>\n      <li>\n        <Link to=\"./\">{projectMessages.overviewLink}</Link>\n      </li>\n      {project.sections.map(({ id, name }, index) => (\n        <li key={id}>\n          <Link to={id}>{name}</Link>\n        </li>\n      ))}\n      <li>\n        <button onClick={() => setEditingSections(true)}>\n          Edit project sections\n        </button>\n      </li>\n    </ul>\n  );\n\n  const projectSettings = (\n    <ProjectSettings\n      project={project}\n      toggleEditing={() => setEditingSections(false)}\n      updateProject={updateProject}\n    />\n  );\n\n  return (\n    <div>\n      <Router>\n        <ProjectOverview default project={project} />\n        {project.sections.map((section, index) => (\n          <ProjectSection\n            key={section.id}\n            path={section.id}\n            project={project}\n            updateProjectSection={updateProjectSection}\n            uploadImage={uploadImage}\n            {...section}\n          />\n        ))}\n      </Router>\n\n      {isEditingSections ? projectSettings : projectNavigation}\n    </div>\n  );\n}\n\nProject.propTypes = {\n  updateProject: PropTypes.func,\n};\n\nProject.defaultProps = {\n  updateProject: () => null,\n};\n","import { PROJECT_SECTIONS_DEFAULT } from 'shared';\n\nexport const projects = 'abce'.split('').map(p => ({\n  id: `project-${p}`,\n  name: `Project ${p.toUpperCase()}`,\n  details: `Details about project ${p.toUpperCase()}`,\n  sections: PROJECT_SECTIONS_DEFAULT,\n}));\n","import React, { useState, useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Dashboard from 'dashboard';\nimport Project from 'project';\nimport NotFound from 'NotFound';\nimport { Router, Link } from '@reach/router';\nimport { projects as demoProjects } from 'test/fixtures';\nimport { makeRoutePath } from 'utils/routing';\nimport Loader from 'shared/Loader';\nimport { homepage } from '../package.json';\nimport { saveProjects, useDropboxClient } from 'shared';\nimport 'App.css';\n\nconst HOME_PATH = makeRoutePath('/');\nconst Home = () => <div>Home</div>;\n\nlet lastProjectsState;\n\nfunction removeHash() {\n  window.history.pushState(\n    '',\n    document.title,\n    window.location.pathname + window.location.search\n  );\n}\n\nfunction AccountNav({ client, authUrl, logout }) {\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (client) {\n      removeHash();\n      client.usersGetCurrentAccount().then(setUserInfo);\n    }\n  }, []);\n\n  if (!client) {\n    return <a href={authUrl}>Login to Dropbox</a>;\n  }\n\n  return userInfo ? (\n    <div>\n      <div>\n        <h2>{userInfo.name.familiar_name}</h2>\n        <img\n          style={{ borderRadius: '50%' }}\n          with={50}\n          height={50}\n          src={userInfo.profile_photo_url}\n          alt={userInfo.name.display_name}\n        />\n        <button onClick={logout}>Logout</button>\n      </div>\n    </div>\n  ) : (\n    <Loader />\n  );\n}\n\nexport default function App({ defaultProjects = demoProjects }) {\n  const [debugState, setDebugState] = useState(false);\n  const db = useDropboxClient();\n  const { client, updateDatabase, uploadImage } = db;\n  lastProjectsState = defaultProjects;\n  const [projects, setProjects] = useState(defaultProjects);\n\n  useEffect(\n    () => {\n      if (!client) {\n        window.location.href =\n          process.env.NODE_ENV === 'production'\n            ? homepage\n            : window.location.origin;\n      }\n    },\n    [client]\n  );\n\n  function updateProject(projectUpdate) {\n    setProjects(\n      projects.map(project => {\n        if (project.id === projectUpdate.id) {\n          return {\n            ...project,\n            ...projectUpdate,\n          };\n        }\n        return project;\n      })\n    );\n  }\n\n  function updateProjectSection(projectId, sectionId, update) {\n    const project = projects.find(({ id }) => id === projectId);\n    const section = project.sections.find(s => s.id === sectionId);\n    if (project && section) {\n      updateProject({\n        ...project,\n        sections: project.sections.map(section => {\n          delete section.editorContent;\n          return section.id === sectionId\n            ? {\n                ...section,\n                ...update,\n              }\n            : section;\n        }),\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (client && !isEqual(lastProjectsState, projects)) {\n      saveProjects(projects);\n      updateDatabase({ data: { projects } });\n      lastProjectsState = projects;\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header>\n        Anni Project Manager Application\n        <ul>\n          <li>\n            <Link to={HOME_PATH}>Home</Link>\n          </li>\n          {client && (\n            <li>\n              <Link to={makeRoutePath('dashboard')}>Dashboard</Link>\n            </li>\n          )}\n          <li>\n            <AccountNav {...db} />\n          </li>\n        </ul>\n      </header>\n      <Router>\n        <Home path={makeRoutePath('/')} />\n        <Dashboard\n          path={makeRoutePath('dashboard')}\n          projects={projects}\n          setProjects={setProjects}\n        />\n        <Project\n          path={makeRoutePath(':projectId/*')}\n          projects={projects}\n          updateProject={updateProject}\n          updateProjectSection={updateProjectSection}\n          uploadImage={uploadImage}\n        />\n        <NotFound default />\n      </Router>\n      <footer\n        style={{\n          padding: '100px 20px',\n          background: 'MintCream',\n          float: 'right',\n        }}\n      >\n        <button onClick={() => setDebugState(!debugState)}>Debug State</button>\n        {debugState && (\n          <pre style={{ background: 'lavender', padding: 10 }}>\n            {JSON.stringify(projects, null, 2)}\n          </pre>\n        )}\n      </footer>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { getProjects, useDropboxClient } from 'shared';\nimport ApplicationProvider from 'Providers';\nimport './index.css';\nimport App from './App';\nimport Loader from 'shared/Loader';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootEl = document.getElementById('root');\n\nfunction PresentationPanel({ children }) {\n  return <div className=\"PresentationPanel\">{children}</div>;\n}\n\nfunction LandingPage() {\n  const { authUrl } = useDropboxClient();\n  return (\n    <PresentationPanel>\n      <div>\n        <h1>Anni</h1>\n        <a href={authUrl}>Login with Dropbox</a>\n      </div>\n    </PresentationPanel>\n  );\n}\n\nfunction ApplicationLoader() {\n  const { client, readDatabase } = useDropboxClient();\n  const [projects, setProjects] = useState(null);\n  useEffect(() => {\n    if (client) {\n      readDatabase().then(database => {\n        if (database) {\n          setProjects(database.projects);\n        } else {\n          getProjects().then(setProjects);\n        }\n      });\n    }\n  }, []);\n\n  if (!client) {\n    return <LandingPage />;\n  }\n\n  if (!projects) {\n    return (\n      <PresentationPanel>\n        <Loader />\n      </PresentationPanel>\n    );\n  }\n  return (\n    <ApplicationProvider>\n      <App defaultProjects={projects} />\n    </ApplicationProvider>\n  );\n}\n\nReactDOM.render(\n  <ApplicationProvider>\n    <ApplicationLoader />\n  </ApplicationProvider>,\n  rootEl\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}