{"version":3,"sources":["shared/project.js","shared/index.js","shared/Loader.js","Providers.js","utils/routing.js","dashboard/index.js","test/ids.js","NotFound.js","project/sections/Prose.js","shared/SortableList.js","project/sections/ImageCollection/index.js","project/sections/Animation/index.js","project/ProjectSection.js","project/ProjectOverview.js","project/ProjectSectionForm.js","project/ProjectSettings.js","project/index.js","test/fixtures.js","App.js","serviceWorker.js","index.js"],"names":["SECTION_TYPES","SECTION_SUB_TYPES","SECTION_CONFIG","_SECTION_CONFIG","Object","defineProperty","SECTION_TYPE_NAMES","_SECTION_TYPE_NAMES","SECTION_SUB_TYPE_NAMES","_SECTION_SUB_TYPE_NAM","projectSectionTypes","PropTypes","oneOf","projectSectionSubTypes","projectSectionShape","shape","id","string","name","type","isRequired","subtype","projectMessages","sections","arrayOf","overviewLink","PROJECT_SECTIONS_DEFAULT","slugify","createProjectWithDefaults","key","PROJECTS_STORE_KEY","concat","DEFAULT_PROJECTS_STORE","getProjects","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","store","wrap","_context","prev","next","localForage","getItem","sent","setItem","abrupt","t0","stop","apply","this","arguments","saveProjects","projects","__webpack_require__","d","__webpack_exports__","DropboxProvider","useDropboxClient","defaultAccessToken","clientId","process","REACT_APP_INTEG_TEST","_require","require","integClientId","integAccessToken","createDropboxProvider","authRedirect","window","location","origin","DropboxContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loader","createElement","Providers","children","react_default","shared","makeRoutePath","path","messages","projectNameLabel","projectNamePlaceholder","noProjects","createProject","removeProject","removeProjectAriaLabel","errorProjectNameTaken","generateRemoveButtonAriaLabel","replace","ProjectCard","es","to","aria-label","onClick","projectNameErrorId","ProjectForm","_ref2","addProject","validateProject","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","projectNameError","setProjectNameError","onSubmit","e","preventDefault","projectData","validationResult","htmlFor","aria-describedby","aria-invalid","className","placeholder","onChange","target","style","color","message","Dashboard","_ref3","setProjects","filter","project","length","map","assign","toConsumableArray","_ref4","find","p","PROJECT_SECTION","PROJECT_SECTION_NAV","NotFound","TextEditor","React","lazy","Promise","all","then","bind","ProjectProseSection","props","react","fallback","DragHandle","SortableHandle","border","cursor","padding","display","SortableItem","SortableElement","_ref$renderItem","renderItem","SortableList","SortableContainer","items","_ref2$listStyle","listStyle","restProps","objectWithoutProperties","index","demoItems","SortableDragHandleList","_ref3$axis","axis","_ref3$defaultItems","defaultItems","_ref3$onReorder","onReorder","setItems","useEffect","newItems","difference","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","generateRenderItem","removeFile","file","url","preview","title","description","maxWidth","position","src","alt","height","flexWrap","INPUT_ID","useFileDrop","initialState","isFileDropActive","setIsActive","FilesDropZone","onDrop","_useFileDrop","onDropCapture","ev","files","dataTransfer","kind","f","getAsFile","onDragOverCapture","onDragLeaveCapture","background","uploadNewFiles","_callee2","_ref5","newFiles","collection","save","uploadImage","newUploads","idToUrlMap","nextCollection","_context2","_ref7","reduce","acc","_ref8","objectSpread","item","remoteUrl","uploaded","ImageCollection","defaultCollection","setCollection","_useState5","_useState6","isSaving","setIsSaving","_useState7","_useState8","error","setError","_useState9","_useState10","isPendingChanges","setIsPendingChanges","updateCollection","newCollection","isPending","isEqual","checkIfPendingChanges","addFilesToCollection","imagesToUpload","uniqueId","URL","createObjectURL","_saveCollection","catch","i","accept","multiple","_ref6","disabled","defaultProps","console","log","AnimationSection","ProjectSection","updateProjectSection","update","data-testid","TYPE_PROSE","TYPE_IMAGE_COLLECTION","TYPE_MOTION","Animation_ProjectProseSection","renderSectionContent","ProjectOverview","details","newProjectSectionNameLabel","newProjectSectionNamePlaceholder","saveNewProjectSectionButtonLabel","NAME_SECTION_TYPE","NAME_SECTION_SUB_TYPE","SUBTYPE_MOOD_BOARD","isTypeSelected","state","isSubTypeSelected","reducer","oldState","newState","ProjectSectionForm","saveNewSection","_useReducer","useReducer","_useReducer2","setState","setSubType","entries","subtypes","checked","Array","isArray","setType","cancel","saveChanges","ProjectSettings","updateProject","toggleEditing","projectState","updateProjectState","newSection","getProjectbyId","createSelector","projectId","Project","isEditingSections","setEditingSections","src_NotFound","projectNavigation","projectSettings","default","section","lastProjectsState","split","toUpperCase","HOME_PATH","Home","AccountNav","client","authUrl","logout","userInfo","setUserInfo","history","pushState","document","pathname","search","usersGetCurrentAccount","familiar_name","borderRadius","with","profile_photo_url","display_name","href","App","_ref2$defaultProjects","defaultProjects","demoProjects","debugState","setDebugState","db","updateDatabase","projectUpdate","data","App_Home","sectionId","s","editorContent","float","JSON","stringify","Boolean","hostname","match","rootEl","getElementById","PresentationPanel","LandingPage","ReactDOM","render","_useDropboxClient2","readDatabase","database","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cad852b4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport localForage from 'localforage';\nimport PropTypes from 'prop-types';\nimport slugify from '@sindresorhus/slugify';\nimport { useDropboxClient } from '.';\n\nexport const TYPE_IMAGE_COLLECTION = 'imageCollection';\nexport const TYPE_PROSE = 'prose';\nexport const TYPE_MOTION = 'motion';\n\nexport const SUBTYPE_MOOD_BOARD = 'moodBoard';\nexport const SUBTYPE_STORY_BOARD = 'storyBoard';\nexport const SUBTYPE_STYLE_FRAMES = 'styleFrames';\n\nexport const SECTION_TYPES = [TYPE_IMAGE_COLLECTION, TYPE_PROSE, TYPE_MOTION];\nexport const SECTION_SUB_TYPES = [\n  SUBTYPE_MOOD_BOARD,\n  SUBTYPE_STORY_BOARD,\n  SUBTYPE_STYLE_FRAMES,\n];\nexport const SECTION_CONFIG = {\n  [TYPE_PROSE]: TYPE_PROSE,\n  [TYPE_MOTION]: TYPE_MOTION,\n  [TYPE_IMAGE_COLLECTION]: [\n    SUBTYPE_MOOD_BOARD,\n    SUBTYPE_STORY_BOARD,\n    SUBTYPE_STYLE_FRAMES,\n  ],\n};\n\nexport const DEFAULT_PROSE_NAME = 'Script';\nexport const DEFAULT_IMAGE_COLLECTION_NAME = 'Image collection';\nexport const DEFAULT_MOOD_BOARD_NAME = 'Mood board';\nexport const DEFAULT_STORY_BOARD_NAME = 'Story board';\nexport const DEFAULT_STYLE_FRAMES_NAME = 'Style frames';\nexport const DEFAULT_MOTION_NAME = 'Animation';\n\nexport const SECTION_TYPE_NAMES = {\n  [TYPE_IMAGE_COLLECTION]: DEFAULT_IMAGE_COLLECTION_NAME,\n  [TYPE_PROSE]: DEFAULT_PROSE_NAME,\n  [TYPE_MOTION]: DEFAULT_MOTION_NAME,\n};\n\nexport const SECTION_SUB_TYPE_NAMES = {\n  [SUBTYPE_MOOD_BOARD]: DEFAULT_MOOD_BOARD_NAME,\n  [SUBTYPE_STORY_BOARD]: DEFAULT_STORY_BOARD_NAME,\n  [SUBTYPE_STYLE_FRAMES]: DEFAULT_STYLE_FRAMES_NAME,\n};\n\nexport const projectSectionTypes = PropTypes.oneOf(SECTION_TYPES);\nexport const projectSectionSubTypes = PropTypes.oneOf(SECTION_SUB_TYPES);\n\nexport const projectSectionShape = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  type: projectSectionTypes.isRequired,\n  subtype: projectSectionSubTypes,\n});\n\nexport const projectShape = PropTypes.shape({\n  name: PropTypes.string,\n  sections: PropTypes.arrayOf(projectSectionShape),\n});\n\nexport const projectMessages = {\n  overviewLink: 'Overview',\n};\n\nexport const PROJECT_SECTIONS_DEFAULT = [\n  {\n    id: slugify(DEFAULT_PROSE_NAME),\n    name: DEFAULT_PROSE_NAME,\n    type: TYPE_PROSE,\n  },\n  {\n    id: slugify(DEFAULT_MOOD_BOARD_NAME),\n    name: DEFAULT_MOOD_BOARD_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_MOOD_BOARD,\n  },\n  {\n    id: slugify(DEFAULT_STORY_BOARD_NAME),\n    name: DEFAULT_STORY_BOARD_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_STORY_BOARD,\n  },\n  {\n    id: slugify(DEFAULT_STYLE_FRAMES_NAME),\n    name: DEFAULT_STYLE_FRAMES_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_STYLE_FRAMES,\n  },\n  {\n    id: slugify(DEFAULT_MOTION_NAME),\n    name: DEFAULT_MOTION_NAME,\n    type: TYPE_MOTION,\n  },\n];\n\nexport function createProjectWithDefaults(name) {\n  return {\n    id: slugify(name),\n    name,\n    sections: PROJECT_SECTIONS_DEFAULT,\n  };\n}\n\nconst NAMESPACE = 'anni-pma-';\nconst prefixKey = key => `${NAMESPACE}${key}`;\nconst PROJECTS_STORE_KEY = prefixKey('projects');\nconst DEFAULT_PROJECTS_STORE = [];\n\nexport const getProjects = async () => {\n  try {\n    const store = await localForage.getItem(PROJECTS_STORE_KEY);\n    if (!store) {\n      await localForage.setItem(PROJECTS_STORE_KEY, DEFAULT_PROJECTS_STORE);\n      return DEFAULT_PROJECTS_STORE;\n    }\n    return store;\n  } catch (e) {}\n};\n\nexport function saveProjects(projects) {\n  if (projects) {\n    return localForage.setItem(PROJECTS_STORE_KEY, projects);\n  }\n}\n\nfunction updateProjectById(projects, projectUpdate) {\n  return projects.map(project => {\n    if (project.id === projectUpdate.id) {\n      return {\n        ...project,\n        ...projectUpdate,\n      };\n    }\n    return project;\n  });\n}\n\nlet lastProjectsState;\n\nexport function useProjectManager(defaultProjects) {\n  const { updateDatabase } = useDropboxClient();\n  const [projects, setProjects] = useState(defaultProjects);\n\n  function updateProject(projectUpdate) {\n    setProjects(updateProjectById(projectUpdate));\n  }\n\n  useEffect(() => {\n    if (!isEqual(lastProjectsState, projects)) {\n      saveProjects(projects);\n      updateDatabase({ data: { projects } });\n      lastProjectsState = projects;\n    }\n  });\n\n  return {\n    updateProject,\n  };\n}\n","import createDropboxProvider from 'dbdbdb-provider';\nexport * from './project';\nconst { REACT_APP_INTEG_TEST } = process.env;\nlet clientId = process.env.REACT_APP_DROPBOX_CLIENT_ID;\nlet defaultAccessToken;\n\nif (REACT_APP_INTEG_TEST) {\n  const { integClientId, integAccessToken } = require('.ignore/integ-config');\n  clientId = integClientId;\n  defaultAccessToken = integAccessToken;\n}\n\nexport const {\n  DropboxContext,\n  DropboxProvider,\n  useDropboxClient,\n} = createDropboxProvider({\n  clientId,\n  authRedirect: process.env.PUBLIC_URL || window.location.origin,\n  defaultAccessToken,\n});\n","import React from 'react';\n\nconst Loader = () => <div>Loading...</div>;\n\nexport default Loader;\n","import React from 'react';\nimport { DropboxProvider } from 'shared';\n\nexport default function Providers({ children }) {\n  return <DropboxProvider>{children}</DropboxProvider>;\n}\n","export const makeRoutePath = path => {\n  const basePath = process.env.PUBLIC_URL;\n\n  if (path === '/') {\n    return `${basePath}/`;\n  }\n\n  return `${basePath}/${path}/`;\n};\n","import React, { useState } from 'react';\nimport { Link } from '@reach/router';\nimport { makeRoutePath } from 'utils/routing';\nimport { createProjectWithDefaults } from 'shared';\n\nexport const messages = {\n  projectNameLabel: 'Project name',\n  projectNamePlaceholder: 'Project B',\n  noProjects: 'No projects',\n  createProject: 'Create project',\n  removeProject: 'Remove project',\n  removeProjectAriaLabel: 'Remove {name} project',\n  errorProjectNameTaken: 'Sorry, that project name is already taken.',\n};\n\nexport const generateRemoveButtonAriaLabel = name =>\n  messages.removeProjectAriaLabel.replace(/\\{.*?\\}/, name);\n\nfunction ProjectCard({ id, name, removeProject }) {\n  return (\n    <div>\n      <h3>\n        <Link to={makeRoutePath(id)}>{name}</Link>\n      </h3>\n      <button\n        aria-label={generateRemoveButtonAriaLabel(name)}\n        onClick={() => removeProject(name)}\n      >\n        {messages.removeProject}\n      </button>\n    </div>\n  );\n}\n\nconst projectNameErrorId = 'projectNameErrorId';\nfunction ProjectForm({ addProject, validateProject }) {\n  const [value, setValue] = useState('');\n  const [projectNameError, setProjectNameError] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    const projectData = createProjectWithDefaults(value);\n    const validationResult = validateProject(projectData);\n    if (validationResult === null) {\n      addProject(projectData);\n      setValue('');\n    } else {\n      setProjectNameError(validationResult);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"projectName\">\n        {messages.projectNameLabel}\n        <input\n          aria-describedby={projectNameError && projectNameErrorId}\n          aria-invalid={!!projectNameError ? true : null}\n          id=\"projectName\"\n          type=\"text\"\n          className=\"input\"\n          placeholder={messages.projectNamePlaceholder}\n          value={value}\n          onChange={e => {\n            setProjectNameError(null);\n            setValue(e.target.value);\n          }}\n        />\n      </label>\n      {projectNameError && (\n        <p style={{ color: 'magenta' }} id={projectNameErrorId}>\n          {projectNameError.message}\n        </p>\n      )}\n      <button type=\"submit\" id=\"create-project-form-button\">\n        {messages.createProject}\n      </button>\n    </form>\n  );\n}\n\nexport default function Dashboard({ projects, setProjects }) {\n  const addProject = project => setProjects([...projects, project]);\n  const removeProject = name =>\n    setProjects(projects.filter(project => project.name !== name));\n\n  function validateProject({ name }) {\n    if (projects.find(p => p.name === name)) {\n      return {\n        message: messages.errorProjectNameTaken,\n      };\n    }\n    return null;\n  }\n\n  return (\n    <div id=\"dashboard-screen\">\n      <h2>Projects</h2>\n      {projects.length === 0 && <p>{messages.noProjects}</p>}\n      {projects.map(project => (\n        <ProjectCard\n          {...project}\n          key={project.name}\n          removeProject={removeProject}\n        />\n      ))}\n      <ProjectForm addProject={addProject} validateProject={validateProject} />\n    </div>\n  );\n}\n","export const PROJECT_SECTION = 'PROJECT_SECTION';\nexport const PROJECT_SECTION_NAV = 'PROJECT_SECTION_NAV';\n","import React from 'react';\n\nexport const messages = {\n  title: '404 - Page not found',\n};\nexport const NotFound = () => (\n  <div>\n    <h1>{messages.title}</h1>\n  </div>\n);\nexport default NotFound;\n","import React, { Suspense } from 'react';\nimport Loader from 'shared/Loader';\n\nconst TextEditor = React.lazy(() => import('shared/TextEditor'));\n\nexport default function ProjectProseSection(props) {\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        <TextEditor {...props} />\n      </Suspense>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport difference from 'lodash/difference';\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle,\n  arrayMove,\n} from 'react-sortable-hoc';\n\nconst DragHandle = SortableHandle(() => (\n  <span\n    style={{\n      border: '1px dotted gold',\n      cursor: 'grab',\n      padding: 8,\n      display: 'inline-block',\n    }}\n  >\n    :::\n  </span>\n)); // This can be any component you want\n\nconst SortableItem = SortableElement(\n  ({ renderItem = () => 'feed me', value }) => {\n    return (\n      <li>\n        <DragHandle />\n        {typeof renderItem === 'string' ? value : renderItem(value)}\n      </li>\n    );\n  }\n);\n\nconst SortableList = SortableContainer(\n  ({ items, listStyle = {}, ...restProps }) => {\n    return (\n      <ul style={listStyle}>\n        {items.map((value, index) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            value={value}\n            {...restProps}\n          />\n        ))}\n      </ul>\n    );\n  }\n);\n\nconst demoItems = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6'];\n\nexport default function SortableDragHandleList({\n  axis = 'y',\n  defaultItems = demoItems,\n  onReorder = () => null,\n  ...restProps\n}) {\n  const [items, setItems] = useState(defaultItems);\n\n  useEffect(() => {\n    const newItems = difference(defaultItems, items);\n    if (newItems.length > 0) {\n      setItems([...items, ...newItems]);\n    }\n  });\n\n  useEffect(\n    () => {\n      if (defaultItems !== items) {\n        setItems(defaultItems);\n      }\n    },\n    [defaultItems]\n  );\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const newItems = arrayMove(items, oldIndex, newIndex);\n    onReorder(newItems);\n    setItems(newItems);\n  };\n\n  return (\n    <SortableList\n      {...restProps}\n      axis={axis}\n      items={items}\n      onSortEnd={onSortEnd}\n      useDragHandle={true}\n    />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport SortableList from 'shared/SortableList';\n\nfunction generateRenderItem({ removeFile }) {\n  return function({ file, id, url, preview, title, description }) {\n    return (\n      <figure style={{ maxWidth: 300, position: 'relative' }}>\n        <img\n          src={url || preview}\n          alt={title || description || (file && file.name)}\n          style={{ maxWidth: '100%', height: 'auto' }}\n        />\n        <figcaption>{description}</figcaption>\n        <button onClick={() => removeFile(id)}>× delete</button>\n      </figure>\n    );\n  };\n}\n\nconst listStyle = {\n  display: 'flex',\n  flexWrap: 'wrap',\n};\n\nconst INPUT_ID = 'imageCollectionUploadInput';\n\nfunction useFileDrop(initialState) {\n  const [isFileDropActive, setIsActive] = useState(initialState);\n\n  return { isFileDropActive, setIsActive };\n}\n\nfunction FilesDropZone({ children, onDrop }) {\n  const { isFileDropActive, setIsActive } = useFileDrop(false);\n  function dropHandler(ev) {\n    ev.preventDefault();\n\n    // Prevent default behavior (Prevent file from being opened)\n    ev.preventDefault();\n\n    let files;\n\n    if (ev.dataTransfer.items) {\n      files = [...ev.dataTransfer.items]\n        .filter(({ kind }) => kind === 'file')\n        .map(f => f.getAsFile());\n    } else {\n      files = [...ev.dataTransfer.files];\n    }\n\n    if (files) {\n      onDrop(files);\n    }\n  }\n\n  return (\n    <div\n      onDropCapture={dropHandler}\n      onDragOverCapture={e => {\n        e.preventDefault();\n        setIsActive(true);\n      }}\n      onDragLeaveCapture={() => setIsActive(false)}\n      style={{\n        padding: 8,\n        background: isFileDropActive ? 'MediumSpringGreen' : 'transparent',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nasync function uploadNewFiles({ newFiles, collection, save, uploadImage }) {\n  const newUploads = await Promise.all(\n    newFiles.map(({ file }) => uploadImage({ file }))\n  );\n  const idToUrlMap = newUploads.reduce(\n    (acc, { url }, index) => ({\n      ...acc,\n      [newFiles[index].id]: url,\n    }),\n    {}\n  );\n\n  const nextCollection = collection.map(item => {\n    const remoteUrl = idToUrlMap[item.id];\n    if (remoteUrl) {\n      return {\n        ...item,\n        url: remoteUrl,\n        uploaded: true,\n      };\n    } else {\n      return item;\n    }\n  });\n\n  save({ collection: nextCollection });\n}\n\nexport default function ImageCollection(props) {\n  const { collection: defaultCollection, save } = props;\n  const [collection, setCollection] = useState(defaultCollection || []);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPendingChanges, setIsPendingChanges] = useState(false);\n  const { isFileDropActive } = useFileDrop();\n\n  const checkIfPendingChanges = nextCollection => {\n    const isPending = !isEqual(defaultCollection, nextCollection || collection);\n    setIsPendingChanges(isPending);\n    return isPending;\n  };\n\n  const updateCollection = newCollection => {\n    if (newCollection && checkIfPendingChanges(newCollection)) {\n      setCollection(newCollection);\n    }\n  };\n\n  useEffect(\n    () => {\n      updateCollection(defaultCollection);\n    },\n    [defaultCollection]\n  );\n\n  function addFilesToCollection(files) {\n    const imagesToUpload = files.map(file => ({\n      id: uniqueId(file.name),\n      name: file.name,\n      file,\n      preview: URL.createObjectURL && URL.createObjectURL(file),\n      uploaded: false,\n    }));\n    updateCollection([...collection, ...imagesToUpload]);\n  }\n\n  function removeFile(id) {\n    updateCollection(collection.filter(i => i.id !== id));\n  }\n\n  function onUploadImage({ target }) {\n    addFilesToCollection([...target.files]);\n  }\n\n  async function saveCollection() {\n    setError(null);\n    const newFiles = collection.filter(f => !f.uploaded);\n\n    if (newFiles.length) {\n      setIsSaving(true);\n      await uploadNewFiles({\n        ...props,\n        collection,\n        newFiles,\n        save,\n      }).catch(setError);\n      setIsSaving(false);\n    } else if (!isEqual(defaultCollection, collection)) {\n      save({ collection });\n    }\n  }\n\n  return (\n    <FilesDropZone onDrop={addFilesToCollection}>\n      {collection.length > 0 ? (\n        <SortableList\n          axis=\"xy\"\n          defaultItems={collection}\n          listStyle={listStyle}\n          onReorder={updateCollection}\n          renderItem={generateRenderItem({ removeFile })}\n        />\n      ) : (\n        <p>No images.</p>\n      )}\n      <label htmlFor={INPUT_ID}>\n        Upload image {isFileDropActive && 'ACTIVE!'}\n      </label>\n      <input\n        id={INPUT_ID}\n        name={INPUT_ID}\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        multiple\n        onChange={onUploadImage}\n      />\n      {isSaving ? (\n        'Saving...'\n      ) : (\n        <button disabled={!isPendingChanges} onClick={saveCollection}>\n          Save\n        </button>\n      )}\n      {error && <p style={{ color: 'red' }}>{error.message}</p>}\n    </FilesDropZone>\n  );\n}\n\nImageCollection.propTypes = {\n  defaultCollection: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n    })\n  ),\n  uploadImage: PropTypes.func.isRequired,\n  save: PropTypes.func,\n};\n\nImageCollection.defaultProps = {\n  uploadImage: console.log,\n};\n","import React, { Suspense } from 'react';\nimport Loader from 'shared/Loader';\n\nconst AnimationSection = React.lazy(() => import('./AnimationSection'));\n\nexport default function ProjectProseSection(props) {\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        <AnimationSection {...props} />\n      </Suspense>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  projectSectionTypes,\n  projectSectionSubTypes,\n  projectShape,\n  TYPE_PROSE,\n  TYPE_IMAGE_COLLECTION,\n  TYPE_MOTION,\n} from 'shared';\nimport { PROJECT_SECTION } from 'test/ids';\nimport ProseSection from './sections/Prose';\nimport ImageCollection from './sections/ImageCollection';\nimport Animation from './sections/Animation';\n\nfunction renderSectionContent(type, props) {\n  switch (type) {\n    case TYPE_PROSE:\n      return <ProseSection {...props} />;\n    case TYPE_IMAGE_COLLECTION:\n      return <ImageCollection {...props} />;\n    case TYPE_MOTION:\n      return <Animation {...props} />;\n    default:\n      return <div>Section content pending for type: {type}</div>;\n  }\n}\n\nexport default function ProjectSection({ updateProjectSection, ...restProps }) {\n  const { id, name, project, subtype, type } = restProps;\n  const props = {\n    ...restProps,\n    save: update => updateProjectSection(project.id, id, update),\n  };\n  return (\n    <div data-testid={PROJECT_SECTION}>\n      <h1>\n        {project.name} - {name}\n      </h1>\n      {renderSectionContent(type, props)}\n      {subtype && ` - ${subtype}`}\n    </div>\n  );\n}\n\nProjectSection.propTypes = {\n  name: PropTypes.string,\n  project: projectShape,\n  subtype: projectSectionSubTypes,\n  type: projectSectionTypes,\n};\n","import React from 'react';\nimport { PROJECT_SECTION } from 'test/ids';\nimport { projectShape } from 'shared';\n\nexport default function ProjectOverview({ project }) {\n  return (\n    <div data-testid={PROJECT_SECTION}>\n      <h1>{project.name}</h1>\n      <p>{project.details}</p>\n    </div>\n  );\n}\n\nProjectOverview.propTypes = {\n  project: projectShape,\n};\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport slugify from '@sindresorhus/slugify';\nimport {\n  projectShape,\n  SECTION_CONFIG,\n  SECTION_TYPE_NAMES,\n  SECTION_SUB_TYPE_NAMES,\n  TYPE_IMAGE_COLLECTION,\n  SUBTYPE_MOOD_BOARD,\n} from 'shared';\n\nexport const messages = {\n  newProjectSectionNameLabel: 'New project section name',\n  newProjectSectionNamePlaceholder: 'Section name',\n  saveNewProjectSectionButtonLabel: 'Add new project section',\n};\n\nexport const NAME_SECTION_TYPE = 'type';\nexport const NAME_SECTION_SUB_TYPE = 'subtype';\nexport const DEFAULT_TYPE = TYPE_IMAGE_COLLECTION;\nexport const DEFAULT_SUB_TYPE = SUBTYPE_MOOD_BOARD;\n\nconst initialState = {\n  name: '',\n  type: DEFAULT_TYPE,\n  subtype: DEFAULT_SUB_TYPE,\n};\n\nconst isTypeSelected = (type, state) => type === state.type;\nconst isSubTypeSelected = (type, state) => type === state.subtype;\n\nconst reducer = (oldState, newState) => ({ ...oldState, ...newState });\n\nexport default function ProjectSectionForm({ saveNewSection }) {\n  const [state, setState] = useReducer(reducer, initialState);\n  const setName = name => setState({ name });\n  const setSubType = subtype => setState({ subtype });\n  const setType = type => {\n    setState({ type });\n    setSubType(\n      Array.isArray(SECTION_CONFIG[type]) ? SECTION_CONFIG[type][0] : null\n    );\n  };\n  function onSubmit(e) {\n    e.preventDefault();\n    saveNewSection({ ...state, id: slugify(state.name) });\n    setState(initialState);\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        {messages.newProjectSectionNameLabel}\n        <input\n          value={state.name}\n          onChange={({ target }) => setName(target.value)}\n          name=\"newProjectSectionName\"\n          placeholder={messages.newProjectSectionNamePlaceholder}\n        />\n      </label>\n      <ul>\n        {Object.entries(SECTION_CONFIG).map(([type, subtypes]) => (\n          <li key={type}>\n            <label>\n              <input\n                checked={isTypeSelected(type, state)}\n                type=\"radio\"\n                name={NAME_SECTION_TYPE}\n                onChange={() => setType(type)}\n                value={type}\n              />\n              {SECTION_TYPE_NAMES[type]}\n            </label>\n            {isTypeSelected(type, state) && Array.isArray(subtypes) && (\n              <ul>\n                {subtypes.map(subtype => (\n                  <li key={subtype}>\n                    <label>\n                      <input\n                        checked={isSubTypeSelected(subtype, state)}\n                        type=\"radio\"\n                        name={NAME_SECTION_SUB_TYPE}\n                        onChange={() => setSubType(subtype)}\n                        value={type}\n                      />\n                      {SECTION_SUB_TYPE_NAMES[subtype]}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n      <button type=\"submit\">{messages.saveNewProjectSectionButtonLabel}</button>\n    </form>\n  );\n}\n\nProjectSectionForm.propTypes = {\n  project: projectShape,\n  saveNewSection: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { projectShape } from 'shared';\nimport SortableList from 'shared/SortableList';\nimport ProjectSectionForm from 'project/ProjectSectionForm';\n\nconst messages = {\n  cancel: 'Cancel',\n  saveChanges: 'Save Changes',\n};\n\nexport default function ProjectSettings({\n  project,\n  updateProject,\n  toggleEditing,\n}) {\n  const [projectState, updateProjectState] = useState(project);\n  const { sections } = projectState;\n  function saveChanges() {\n    updateProject(projectState);\n    toggleEditing();\n  }\n  return (\n    <div>\n      <SortableList\n        defaultItems={sections}\n        onReorder={sections => updateProjectState({ ...project, sections })}\n        renderItem={({ name }) => <strong>{name}</strong>}\n      />\n      <ProjectSectionForm\n        project={projectState}\n        saveNewSection={newSection => {\n          updateProjectState({\n            id: project.id,\n            sections: [...sections, newSection],\n          });\n        }}\n      />\n      <button onClick={saveChanges}>{messages.saveChanges}</button>\n      <button onClick={toggleEditing}>{messages.cancel}</button>\n    </div>\n  );\n}\n\nProjectSettings.propTypes = {\n  project: projectShape,\n  toggleEditing: PropTypes.func.isRequired,\n  updateProject: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { Router, Link } from '@reach/router';\nimport { PROJECT_SECTION_NAV } from 'test/ids';\nimport { projectMessages } from 'shared';\nimport NotFound from 'NotFound';\nimport ProjectSection from 'project/ProjectSection';\nimport ProjectOverview from 'project/ProjectOverview';\nimport ProjectSettings from 'project/ProjectSettings';\n\nconst getProjectbyId = createSelector(\n  props => props.projects,\n  props => props.projectId,\n  (projects, projectId) => projects.find(({ id }) => id === projectId)\n);\n\nexport default function Project(props) {\n  const [isEditingSections, setEditingSections] = useState(false);\n  const project = getProjectbyId(props);\n  const { updateProject, updateProjectSection, uploadImage } = props;\n\n  if (!project) return <NotFound />;\n\n  const projectNavigation = (\n    <ul data-testid={PROJECT_SECTION_NAV}>\n      <li>\n        <Link to=\"./\">{projectMessages.overviewLink}</Link>\n      </li>\n      {project.sections.map(({ id, name }, index) => (\n        <li key={id}>\n          <Link to={id}>{name}</Link>\n        </li>\n      ))}\n      <li>\n        <button onClick={() => setEditingSections(true)}>\n          Edit project sections\n        </button>\n      </li>\n    </ul>\n  );\n\n  const projectSettings = (\n    <ProjectSettings\n      project={project}\n      toggleEditing={() => setEditingSections(false)}\n      updateProject={updateProject}\n    />\n  );\n\n  return (\n    <div>\n      <Router>\n        <ProjectOverview default project={project} />\n        {project.sections.map((section, index) => (\n          <ProjectSection\n            key={section.id}\n            path={section.id}\n            project={project}\n            updateProjectSection={updateProjectSection}\n            uploadImage={uploadImage}\n            {...section}\n          />\n        ))}\n      </Router>\n\n      {isEditingSections ? projectSettings : projectNavigation}\n    </div>\n  );\n}\n\nProject.propTypes = {\n  updateProject: PropTypes.func,\n};\n\nProject.defaultProps = {\n  updateProject: () => null,\n};\n","import { PROJECT_SECTIONS_DEFAULT } from 'shared';\n\nexport const projects = 'abce'.split('').map(p => ({\n  id: `project-${p}`,\n  name: `Project ${p.toUpperCase()}`,\n  details: `Details about project ${p.toUpperCase()}`,\n  sections: PROJECT_SECTIONS_DEFAULT,\n}));\n","import React, { useState, useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Dashboard from 'dashboard';\nimport Project from 'project';\nimport NotFound from 'NotFound';\nimport { Router, Link } from '@reach/router';\nimport { projects as demoProjects } from 'test/fixtures';\nimport { makeRoutePath } from 'utils/routing';\nimport Loader from 'shared/Loader';\nimport { saveProjects, useDropboxClient } from 'shared';\nimport 'App.css';\n\nconst HOME_PATH = makeRoutePath('/');\nconst Home = () => <div>Home</div>;\n\nlet lastProjectsState;\n\nfunction removeHash() {\n  window.history.pushState(\n    '',\n    document.title,\n    window.location.pathname + window.location.search\n  );\n}\n\nfunction AccountNav({ client, authUrl, logout }) {\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (client) {\n      removeHash();\n      client.usersGetCurrentAccount().then(setUserInfo);\n    }\n  }, []);\n\n  if (!client) {\n    return <a href={authUrl}>Login to Dropbox</a>;\n  }\n\n  return userInfo ? (\n    <div>\n      <div>\n        <h2>{userInfo.name.familiar_name}</h2>\n        <img\n          style={{ borderRadius: '50%' }}\n          with={50}\n          height={50}\n          src={userInfo.profile_photo_url}\n          alt={userInfo.name.display_name}\n        />\n        <button onClick={logout}>Logout</button>\n      </div>\n    </div>\n  ) : (\n    <Loader />\n  );\n}\n\nexport default function App({ defaultProjects = demoProjects }) {\n  const [debugState, setDebugState] = useState(false);\n  const db = useDropboxClient();\n  const { client, updateDatabase, uploadImage } = db;\n  lastProjectsState = defaultProjects;\n  const [projects, setProjects] = useState(defaultProjects);\n\n  useEffect(\n    () => {\n      if (!client) {\n        window.location.href =\n          process.env.NODE_ENV === 'production'\n            ? process.env.PUBLIC_URL\n            : window.location.origin;\n      }\n    },\n    [client]\n  );\n\n  function updateProject(projectUpdate) {\n    setProjects(\n      projects.map(project => {\n        if (project.id === projectUpdate.id) {\n          return {\n            ...project,\n            ...projectUpdate,\n          };\n        }\n        return project;\n      })\n    );\n  }\n\n  function updateProjectSection(projectId, sectionId, update) {\n    const project = projects.find(({ id }) => id === projectId);\n    const section = project.sections.find(s => s.id === sectionId);\n    if (project && section) {\n      updateProject({\n        ...project,\n        sections: project.sections.map(section => {\n          delete section.editorContent;\n          return section.id === sectionId\n            ? {\n                ...section,\n                ...update,\n              }\n            : section;\n        }),\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (client && !isEqual(lastProjectsState, projects)) {\n      saveProjects(projects);\n      updateDatabase({ data: { projects } });\n      lastProjectsState = projects;\n    }\n  });\n\n  return (\n    <div className=\"App\" id=\"anni-project-manager-app\">\n      <header>\n        Anni Project Manager Application\n        <ul>\n          <li>\n            <Link to={HOME_PATH}>Home</Link>\n          </li>\n          {client && (\n            <li>\n              <Link to={makeRoutePath('dashboard')}>Dashboard</Link>\n            </li>\n          )}\n          <li>\n            <AccountNav {...db} />\n          </li>\n        </ul>\n      </header>\n      <Router>\n        <Home path={makeRoutePath('/')} />\n        <Dashboard\n          path={makeRoutePath('dashboard')}\n          projects={projects}\n          setProjects={setProjects}\n        />\n        <Project\n          path={makeRoutePath(':projectId/*')}\n          projects={projects}\n          updateProject={updateProject}\n          updateProjectSection={updateProjectSection}\n          uploadImage={uploadImage}\n        />\n        <NotFound default />\n      </Router>\n      <footer\n        style={{\n          padding: '100px 20px',\n          background: 'MintCream',\n          float: 'right',\n        }}\n      >\n        <button onClick={() => setDebugState(!debugState)}>Debug State</button>\n        {debugState && (\n          <pre style={{ background: 'lavender', padding: 10 }}>\n            {JSON.stringify(projects, null, 2)}\n          </pre>\n        )}\n      </footer>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { getProjects, useDropboxClient } from 'shared';\nimport ApplicationProvider from 'Providers';\nimport './index.css';\nimport App from './App';\nimport Loader from 'shared/Loader';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootEl = document.getElementById('root');\n\nfunction PresentationPanel({ children }) {\n  return <div className=\"PresentationPanel\">{children}</div>;\n}\n\nfunction LandingPage() {\n  const { authUrl } = useDropboxClient();\n  return (\n    <PresentationPanel>\n      <div>\n        <h1>Anni</h1>\n        <a href={authUrl}>Login with Dropbox</a>\n      </div>\n    </PresentationPanel>\n  );\n}\n\nfunction ApplicationLoader() {\n  const { client, readDatabase } = useDropboxClient();\n  const [projects, setProjects] = useState(null);\n  useEffect(() => {\n    if (client) {\n      readDatabase().then(database => {\n        if (database) {\n          setProjects(database.projects);\n        } else {\n          getProjects().then(setProjects);\n        }\n      });\n    }\n  }, []);\n\n  if (!client) {\n    return <LandingPage />;\n  }\n\n  if (!projects) {\n    return (\n      <PresentationPanel>\n        <Loader />\n      </PresentationPanel>\n    );\n  }\n  return (\n    <ApplicationProvider>\n      <App defaultProjects={projects} />\n    </ApplicationProvider>\n  );\n}\n\nReactDOM.render(\n  <ApplicationProvider>\n    <ApplicationLoader />\n  </ApplicationProvider>,\n  rootEl\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}