{"version":3,"sources":["shared/project.js","shared/index.js","Providers.js","utils/routing.js","dashboard/index.js","test/ids.js","NotFound.js","shared/Loader.js","project/sections/Prose.js","shared/SortableList.js","project/sections/ImageCollection/index.js","project/ProjectSection.js","project/ProjectOverview.js","project/ProjectSectionForm.js","project/ProjectSettings.js","project/index.js","test/fixtures.js","App.js","serviceWorker.js","index.js"],"names":["TYPE_IMAGE_COLLECTION","TYPE_PROSE","SECTION_TYPES","SECTION_SUB_TYPES","SECTION_CONFIG","_SECTION_CONFIG","Object","defineProperty","SECTION_TYPE_NAMES","_SECTION_TYPE_NAMES","SECTION_SUB_TYPE_NAMES","_SECTION_SUB_TYPE_NAM","projectSectionTypes","PropTypes","oneOf","projectSectionSubTypes","projectSectionShape","shape","id","string","name","type","isRequired","subtype","projectMessages","sections","arrayOf","overviewLink","PROJECT_SECTIONS_DEFAULT","slugify","key","PROJECTS_STORE_KEY","concat","DEFAULT_PROJECTS_STORE","getProjects","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","store","wrap","_context","prev","next","localForage","getItem","sent","setItem","abrupt","t0","stop","apply","this","arguments","saveProjects","projects","authRedirect","homepage","createDropboxProvider","clientId","DropboxProvider","DropboxContext","useDropboxClient","Providers","children","react_default","createElement","makeRoutePath","path","basePath","process","messages","projectNameLabel","projectNamePlaceholder","noProjects","createProject","removeProject","removeProjectAriaLabel","errorProjectNameTaken","generateRemoveButtonAriaLabel","replace","ProjectCard","es","to","aria-label","onClick","projectNameErrorId","ProjectForm","_ref2","addProject","validateProject","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","projectNameError","setProjectNameError","onSubmit","e","preventDefault","projectData","validationResult","htmlFor","aria-describedby","aria-invalid","className","placeholder","onChange","target","style","color","message","Dashboard","_ref3","setProjects","filter","project","length","map","assign","toConsumableArray","_ref4","find","p","PROJECT_SECTION","PROJECT_SECTION_NAV","NotFound","Loader","TextEditor","React","lazy","Promise","all","__webpack_require__","then","bind","ProjectProseSection","props","react","fallback","shared_Loader","DragHandle","SortableHandle","border","cursor","padding","display","SortableItem","SortableElement","_ref$renderItem","renderItem","SortableList","SortableContainer","items","_ref2$listStyle","listStyle","restProps","objectWithoutProperties","index","demoItems","SortableDragHandleList","_ref3$axis","axis","_ref3$defaultItems","defaultItems","_ref3$onReorder","onReorder","setItems","useEffect","newItems","difference","onSortEnd","oldIndex","newIndex","arrayMove","useDragHandle","renderImageItem","file","url","preview","title","description","maxWidth","position","src","alt","height","flexWrap","INPUT_ID","useFileDrop","initialState","isFileDropActive","setIsActive","FilesDropZone","onDrop","_useFileDrop","onDropCapture","ev","files","dataTransfer","kind","f","getAsFile","onDragOverCapture","onDragLeaveCapture","background","ImageCollection","_ref4$defaultCollecti","defaultCollection","collection","setCollection","addFilesToCollection","imagesToUpload","URL","createObjectURL","accept","multiple","_ref5","ProjectSection","updateProjectSection","objectSpread","save","update","data-testid","renderSectionContent","ProjectOverview","details","newProjectSectionNameLabel","newProjectSectionNamePlaceholder","saveNewProjectSectionButtonLabel","NAME_SECTION_TYPE","NAME_SECTION_SUB_TYPE","isTypeSelected","state","isSubTypeSelected","reducer","oldState","newState","ProjectSectionForm","saveNewSection","_useReducer","useReducer","_useReducer2","setState","setSubType","entries","subtypes","checked","Array","isArray","setType","cancel","saveChanges","ProjectSettings","updateProject","toggleEditing","projectState","updateProjectState","newSection","getProjectbyId","createSelector","projectId","Project","isEditingSections","setEditingSections","src_NotFound","projectNavigation","projectSettings","default","section","defaultProps","lastProjectsState","split","toUpperCase","HOME_PATH","Home","AccountNav","client","authUrl","logout","userInfo","setUserInfo","window","history","pushState","document","location","pathname","search","usersGetCurrentAccount","familiar_name","borderRadius","with","profile_photo_url","display_name","href","App","_ref2$defaultProjects","defaultProjects","demoProjects","debugState","setDebugState","db","updateDatabase","_useState5","_useState6","projectUpdate","isEqual","data","App_Home","sectionId","s","console","log","editorContent","float","JSON","stringify","Boolean","hostname","match","rootEl","getElementById","PresentationPanel","LandingPage","ReactDOM","render","_useDropboxClient2","readDatabase","database","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35865586.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport localForage from 'localforage';\nimport PropTypes from 'prop-types';\nimport slugify from '@sindresorhus/slugify';\nimport { useDropboxClient } from '.';\n\nexport const TYPE_IMAGE_COLLECTION = 'imageCollection';\nexport const TYPE_PROSE = 'prose';\nexport const TYPE_MOTION = 'motion';\n\nexport const SUBTYPE_MOOD_BOARD = 'moodBoard';\nexport const SUBTYPE_STORY_BOARD = 'storyBoard';\nexport const SUBTYPE_STYLE_FRAMES = 'styleFrames';\n\nexport const SECTION_TYPES = [TYPE_IMAGE_COLLECTION, TYPE_PROSE, TYPE_MOTION];\nexport const SECTION_SUB_TYPES = [\n  SUBTYPE_MOOD_BOARD,\n  SUBTYPE_STORY_BOARD,\n  SUBTYPE_STYLE_FRAMES,\n];\nexport const SECTION_CONFIG = {\n  [TYPE_PROSE]: TYPE_PROSE,\n  [TYPE_MOTION]: TYPE_MOTION,\n  [TYPE_IMAGE_COLLECTION]: [\n    SUBTYPE_MOOD_BOARD,\n    SUBTYPE_STORY_BOARD,\n    SUBTYPE_STYLE_FRAMES,\n  ],\n};\n\nexport const DEFAULT_PROSE_NAME = 'Script';\nexport const DEFAULT_IMAGE_COLLECTION_NAME = 'Image collection';\nexport const DEFAULT_MOOD_BOARD_NAME = 'Mood board';\nexport const DEFAULT_STORY_BOARD_NAME = 'Story board';\nexport const DEFAULT_STYLE_FRAMES_NAME = 'Style frames';\nexport const DEFAULT_MOTION_NAME = 'Animation';\n\nexport const SECTION_TYPE_NAMES = {\n  [TYPE_IMAGE_COLLECTION]: DEFAULT_IMAGE_COLLECTION_NAME,\n  [TYPE_PROSE]: DEFAULT_PROSE_NAME,\n  [TYPE_MOTION]: DEFAULT_MOTION_NAME,\n};\n\nexport const SECTION_SUB_TYPE_NAMES = {\n  [SUBTYPE_MOOD_BOARD]: DEFAULT_MOOD_BOARD_NAME,\n  [SUBTYPE_STORY_BOARD]: DEFAULT_STORY_BOARD_NAME,\n  [SUBTYPE_STYLE_FRAMES]: DEFAULT_STYLE_FRAMES_NAME,\n};\n\nexport const projectSectionTypes = PropTypes.oneOf(SECTION_TYPES);\nexport const projectSectionSubTypes = PropTypes.oneOf(SECTION_SUB_TYPES);\n\nexport const projectSectionShape = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  type: projectSectionTypes.isRequired,\n  subtype: projectSectionSubTypes,\n});\n\nexport const projectShape = PropTypes.shape({\n  name: PropTypes.string,\n  sections: PropTypes.arrayOf(projectSectionShape),\n});\n\nexport const projectMessages = {\n  overviewLink: 'Overview',\n};\n\nexport const PROJECT_SECTIONS_DEFAULT = [\n  {\n    id: slugify(DEFAULT_PROSE_NAME),\n    name: DEFAULT_PROSE_NAME,\n    type: TYPE_PROSE,\n  },\n  {\n    id: slugify(DEFAULT_MOOD_BOARD_NAME),\n    name: DEFAULT_MOOD_BOARD_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_MOOD_BOARD,\n  },\n  {\n    id: slugify(DEFAULT_STORY_BOARD_NAME),\n    name: DEFAULT_STORY_BOARD_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_STORY_BOARD,\n  },\n  {\n    id: slugify(DEFAULT_STYLE_FRAMES_NAME),\n    name: DEFAULT_STYLE_FRAMES_NAME,\n    type: TYPE_IMAGE_COLLECTION,\n    subtype: SUBTYPE_STYLE_FRAMES,\n  },\n  {\n    id: slugify(DEFAULT_MOTION_NAME),\n    name: DEFAULT_MOTION_NAME,\n    type: TYPE_MOTION,\n  },\n];\n\nexport function createProjectWithDefaults(name) {\n  return {\n    id: slugify(name),\n    name,\n    sections: PROJECT_SECTIONS_DEFAULT,\n  };\n}\n\nconst NAMESPACE = 'anni-pma-';\nconst prefixKey = key => `${NAMESPACE}${key}`;\nconst PROJECTS_STORE_KEY = prefixKey('projects');\nconst DEFAULT_PROJECTS_STORE = [];\n\nexport const getProjects = async () => {\n  try {\n    const store = await localForage.getItem(PROJECTS_STORE_KEY);\n    if (!store) {\n      await localForage.setItem(PROJECTS_STORE_KEY, DEFAULT_PROJECTS_STORE);\n      return DEFAULT_PROJECTS_STORE;\n    }\n    return store;\n  } catch (e) {}\n};\n\nexport function saveProjects(projects) {\n  if (projects) {\n    return localForage.setItem(PROJECTS_STORE_KEY, projects);\n  }\n}\n\nfunction updateProjectById(projects, projectUpdate) {\n  return projects.map(project => {\n    if (project.id === projectUpdate.id) {\n      return {\n        ...project,\n        ...projectUpdate,\n      };\n    }\n    return project;\n  });\n}\n\nlet lastProjectsState;\n\nexport function useProjectManager(defaultProjects) {\n  const { updateDatabase } = useDropboxClient();\n  const [projects, setProjects] = useState(defaultProjects);\n\n  function updateProject(projectUpdate) {\n    setProjects(updateProjectById(projectUpdate));\n  }\n\n  useEffect(() => {\n    if (!isEqual(lastProjectsState, projects)) {\n      saveProjects(projects);\n      updateDatabase({ data: { projects } });\n      lastProjectsState = projects;\n    }\n  });\n\n  return {\n    updateProject,\n  };\n}\n","import createDropboxProvider from 'dbdbdb-provider';\nimport { homepage } from '../../package.json';\nexport * from './project';\nconst authRedirect =\n  process.env.NODE_ENV === 'production' ? homepage : undefined;\n\nexport const {\n  DropboxContext,\n  DropboxProvider,\n  useDropboxClient,\n} = createDropboxProvider({\n  clientId: 'swbiv6r9kwfs4os',\n  authRedirect,\n});\n","import React from 'react';\nimport { DropboxProvider } from 'shared';\n\nexport default function Providers({ children }) {\n  return <DropboxProvider>{children}</DropboxProvider>;\n}\n","export const makeRoutePath = path => {\n  const basePath = process.env.PUBLIC_URL;\n\n  if (path === '/') {\n    return `${basePath}/`;\n  }\n\n  return `${basePath}/${path}/`;\n};\n","import React, { useState } from 'react';\nimport { Link } from '@reach/router';\nimport { makeRoutePath } from 'utils/routing';\nimport { createProjectWithDefaults } from 'shared';\n\nexport const messages = {\n  projectNameLabel: 'Project name',\n  projectNamePlaceholder: 'Project B',\n  noProjects: 'No projects',\n  createProject: 'Create project',\n  removeProject: 'Remove project',\n  removeProjectAriaLabel: 'Remove {name} project',\n  errorProjectNameTaken: 'Sorry, that project name is already taken.',\n};\n\nexport const generateRemoveButtonAriaLabel = name =>\n  messages.removeProjectAriaLabel.replace(/\\{.*?\\}/, name);\n\nfunction ProjectCard({ id, name, removeProject }) {\n  return (\n    <div>\n      <h3>\n        <Link to={makeRoutePath(id)}>{name}</Link>\n      </h3>\n      <button\n        aria-label={generateRemoveButtonAriaLabel(name)}\n        onClick={() => removeProject(name)}\n      >\n        {messages.removeProject}\n      </button>\n    </div>\n  );\n}\n\nconst projectNameErrorId = 'projectNameErrorId';\nfunction ProjectForm({ addProject, validateProject }) {\n  const [value, setValue] = useState('');\n  const [projectNameError, setProjectNameError] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    const projectData = createProjectWithDefaults(value);\n    const validationResult = validateProject(projectData);\n    if (validationResult === null) {\n      addProject(projectData);\n      setValue('');\n    } else {\n      setProjectNameError(validationResult);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"projectName\">\n        {messages.projectNameLabel}\n        <input\n          aria-describedby={projectNameError && projectNameErrorId}\n          aria-invalid={!!projectNameError ? true : null}\n          id=\"projectName\"\n          type=\"text\"\n          className=\"input\"\n          placeholder={messages.projectNamePlaceholder}\n          value={value}\n          onChange={e => {\n            setProjectNameError(null);\n            setValue(e.target.value);\n          }}\n        />\n      </label>\n      {projectNameError && (\n        <p style={{ color: 'magenta' }} id={projectNameErrorId}>\n          {projectNameError.message}\n        </p>\n      )}\n      <button type=\"submit\">{messages.createProject}</button>\n    </form>\n  );\n}\n\nexport default function Dashboard({ projects, setProjects }) {\n  const addProject = project => setProjects([...projects, project]);\n  const removeProject = name =>\n    setProjects(projects.filter(project => project.name !== name));\n\n  function validateProject({ name }) {\n    if (projects.find(p => p.name === name)) {\n      return {\n        message: messages.errorProjectNameTaken,\n      };\n    }\n    return null;\n  }\n\n  return (\n    <div>\n      <h2>Projects</h2>\n      {projects.length === 0 && <p>{messages.noProjects}</p>}\n      {projects.map(project => (\n        <ProjectCard\n          {...project}\n          key={project.name}\n          removeProject={removeProject}\n        />\n      ))}\n      <ProjectForm addProject={addProject} validateProject={validateProject} />\n    </div>\n  );\n}\n","export const PROJECT_SECTION = 'PROJECT_SECTION';\nexport const PROJECT_SECTION_NAV = 'PROJECT_SECTION_NAV';\n","import React from 'react';\n\nexport const messages = {\n  title: '404 - Page not found',\n};\nexport const NotFound = () => (\n  <div>\n    <h1>{messages.title}</h1>\n  </div>\n);\nexport default NotFound;\n","import React from 'react';\n\nconst Loader = () => <div>Loading...</div>;\n\nexport default Loader;\n","import React, { Suspense } from 'react';\nimport Loader from 'shared/Loader';\n\nconst TextEditor = React.lazy(() => import('shared/TextEditor'));\n\nexport default function ProjectProseSection(props) {\n  return (\n    <div>\n      <Suspense fallback={<Loader />}>\n        <TextEditor {...props} />\n      </Suspense>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport difference from 'lodash/difference';\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle,\n  arrayMove,\n} from 'react-sortable-hoc';\n\nconst DragHandle = SortableHandle(() => (\n  <span\n    style={{\n      border: '1px dotted gold',\n      cursor: 'grab',\n      padding: 8,\n      display: 'inline-block',\n    }}\n  >\n    :::\n  </span>\n)); // This can be any component you want\n\nconst SortableItem = SortableElement(\n  ({ renderItem = () => 'feed me', value }) => {\n    return (\n      <li>\n        <DragHandle />\n        {typeof renderItem === 'string' ? value : renderItem(value)}\n      </li>\n    );\n  }\n);\n\nconst SortableList = SortableContainer(\n  ({ items, listStyle = {}, ...restProps }) => {\n    return (\n      <ul style={listStyle}>\n        {items.map((value, index) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            value={value}\n            {...restProps}\n          />\n        ))}\n      </ul>\n    );\n  }\n);\n\nconst demoItems = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6'];\n\nexport default function SortableDragHandleList({\n  axis = 'y',\n  defaultItems = demoItems,\n  onReorder = () => null,\n  ...restProps\n}) {\n  const [items, setItems] = useState(defaultItems);\n\n  useEffect(() => {\n    const newItems = difference(defaultItems, items);\n    if (newItems.length > 0) {\n      setItems([...items, ...newItems]);\n    }\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const newItems = arrayMove(items, oldIndex, newIndex);\n    onReorder(newItems);\n    setItems(newItems);\n  };\n\n  return (\n    <SortableList\n      {...restProps}\n      axis={axis}\n      items={items}\n      onSortEnd={onSortEnd}\n      useDragHandle={true}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SortableList from 'shared/SortableList';\n\nfunction renderImageItem({ file, url, preview, title, description }) {\n  return (\n    <figure style={{ maxWidth: 300, position: 'relative' }}>\n      <img\n        src={url || preview}\n        alt={title || description || (file && file.name)}\n        style={{ maxWidth: '100%', height: 'auto' }}\n      />\n      <figcaption>{description}</figcaption>\n    </figure>\n  );\n}\n\nconst listStyle = {\n  display: 'flex',\n  flexWrap: 'wrap',\n};\n\nconst INPUT_ID = 'imageCollectionUploadInput';\n\nfunction useFileDrop(initialState) {\n  const [isFileDropActive, setIsActive] = useState(initialState);\n\n  return { isFileDropActive, setIsActive };\n}\n\nfunction FilesDropZone({ children, onDrop }) {\n  const { isFileDropActive, setIsActive } = useFileDrop(false);\n  function dropHandler(ev) {\n    ev.preventDefault();\n\n    // Prevent default behavior (Prevent file from being opened)\n    ev.preventDefault();\n\n    let files;\n\n    if (ev.dataTransfer.items) {\n      files = [...ev.dataTransfer.items]\n        .filter(({ kind }) => kind === 'file')\n        .map(f => f.getAsFile());\n    } else {\n      files = [...ev.dataTransfer.files];\n    }\n\n    if (files) {\n      onDrop(files);\n    }\n  }\n\n  return (\n    <div\n      onDropCapture={dropHandler}\n      onDragOverCapture={e => {\n        e.preventDefault();\n        setIsActive(true);\n      }}\n      onDragLeaveCapture={() => setIsActive(false)}\n      style={{\n        padding: 8,\n        background: isFileDropActive ? 'MediumSpringGreen' : 'transparent',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default function ImageCollection({ defaultCollection = [] }) {\n  const [collection, setCollection] = useState(defaultCollection);\n  const { isFileDropActive } = useFileDrop();\n\n  function addFilesToCollection(files) {\n    const imagesToUpload = files.map(f => ({\n      file: f,\n      preview: URL.createObjectURL && URL.createObjectURL(f),\n    }));\n    setCollection([...collection, ...imagesToUpload]);\n  }\n\n  function onUploadImage({ target }) {\n    const { files } = target;\n    addFilesToCollection([...files]);\n  }\n\n  return (\n    <FilesDropZone onDrop={addFilesToCollection}>\n      {collection.length > 0 ? (\n        <SortableList\n          axis=\"xy\"\n          defaultItems={collection}\n          listStyle={listStyle}\n          onReorder={setCollection}\n          renderItem={renderImageItem}\n        />\n      ) : (\n        <p>No images.</p>\n      )}\n      <label htmlFor={INPUT_ID}>\n        Upload image {isFileDropActive && 'ACTIVE!'}\n      </label>\n      <input\n        id={INPUT_ID}\n        name={INPUT_ID}\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        multiple\n        onChange={onUploadImage}\n      />\n    </FilesDropZone>\n  );\n}\n\nImageCollection.propTypes = {\n  defaultCollection: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n    })\n  ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  projectSectionTypes,\n  projectSectionSubTypes,\n  projectShape,\n  TYPE_PROSE,\n  TYPE_IMAGE_COLLECTION,\n} from 'shared';\nimport { PROJECT_SECTION } from 'test/ids';\nimport ProseSection from './sections/Prose';\nimport ImageCollection from './sections/ImageCollection';\n\nfunction renderSectionContent(type, props) {\n  switch (type) {\n    case TYPE_PROSE:\n      return <ProseSection {...props} />;\n    case TYPE_IMAGE_COLLECTION:\n      return <ImageCollection {...props} />;\n    default:\n      return <div>Section content pending for type: {type}</div>;\n  }\n}\n\nexport default function ProjectSection({ updateProjectSection, ...restProps }) {\n  const { id, name, project, subtype, type } = restProps;\n  const props = {\n    ...restProps,\n    save: update => updateProjectSection(project.id, id, update),\n  };\n  return (\n    <div data-testid={PROJECT_SECTION}>\n      <h1>\n        {project.name} - {name}\n      </h1>\n      {renderSectionContent(type, props)}\n      {subtype && ` - ${subtype}`}\n    </div>\n  );\n}\n\nProjectSection.propTypes = {\n  name: PropTypes.string,\n  project: projectShape,\n  subtype: projectSectionSubTypes,\n  type: projectSectionTypes,\n};\n","import React from 'react';\nimport { PROJECT_SECTION } from 'test/ids';\nimport { projectShape } from 'shared';\n\nexport default function ProjectOverview({ project }) {\n  return (\n    <div data-testid={PROJECT_SECTION}>\n      <h1>{project.name}</h1>\n      <p>{project.details}</p>\n    </div>\n  );\n}\n\nProjectOverview.propTypes = {\n  project: projectShape,\n};\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport slugify from '@sindresorhus/slugify';\nimport {\n  projectShape,\n  SECTION_CONFIG,\n  SECTION_TYPE_NAMES,\n  SECTION_SUB_TYPE_NAMES,\n  TYPE_IMAGE_COLLECTION,\n  SUBTYPE_MOOD_BOARD,\n} from 'shared';\n\nexport const messages = {\n  newProjectSectionNameLabel: 'New project section name',\n  newProjectSectionNamePlaceholder: 'Section name',\n  saveNewProjectSectionButtonLabel: 'Add new project section',\n};\n\nexport const NAME_SECTION_TYPE = 'type';\nexport const NAME_SECTION_SUB_TYPE = 'subtype';\nexport const DEFAULT_TYPE = TYPE_IMAGE_COLLECTION;\nexport const DEFAULT_SUB_TYPE = SUBTYPE_MOOD_BOARD;\n\nconst initialState = {\n  name: '',\n  type: DEFAULT_TYPE,\n  subtype: DEFAULT_SUB_TYPE,\n};\n\nconst isTypeSelected = (type, state) => type === state.type;\nconst isSubTypeSelected = (type, state) => type === state.subtype;\n\nconst reducer = (oldState, newState) => ({ ...oldState, ...newState });\n\nexport default function ProjectSectionForm({ saveNewSection }) {\n  const [state, setState] = useReducer(reducer, initialState);\n  const setName = name => setState({ name });\n  const setSubType = subtype => setState({ subtype });\n  const setType = type => {\n    setState({ type });\n    setSubType(\n      Array.isArray(SECTION_CONFIG[type]) ? SECTION_CONFIG[type][0] : null\n    );\n  };\n  function onSubmit(e) {\n    e.preventDefault();\n    saveNewSection({ ...state, id: slugify(state.name) });\n    setState(initialState);\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        {messages.newProjectSectionNameLabel}\n        <input\n          value={state.name}\n          onChange={({ target }) => setName(target.value)}\n          name=\"newProjectSectionName\"\n          placeholder={messages.newProjectSectionNamePlaceholder}\n        />\n      </label>\n      <ul>\n        {Object.entries(SECTION_CONFIG).map(([type, subtypes]) => (\n          <li key={type}>\n            <label>\n              <input\n                checked={isTypeSelected(type, state)}\n                type=\"radio\"\n                name={NAME_SECTION_TYPE}\n                onChange={() => setType(type)}\n                value={type}\n              />\n              {SECTION_TYPE_NAMES[type]}\n            </label>\n            {isTypeSelected(type, state) && Array.isArray(subtypes) && (\n              <ul>\n                {subtypes.map(subtype => (\n                  <li key={subtype}>\n                    <label>\n                      <input\n                        checked={isSubTypeSelected(subtype, state)}\n                        type=\"radio\"\n                        name={NAME_SECTION_SUB_TYPE}\n                        onChange={() => setSubType(subtype)}\n                        value={type}\n                      />\n                      {SECTION_SUB_TYPE_NAMES[subtype]}\n                    </label>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n      <button type=\"submit\">{messages.saveNewProjectSectionButtonLabel}</button>\n    </form>\n  );\n}\n\nProjectSectionForm.propTypes = {\n  project: projectShape,\n  saveNewSection: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { projectShape } from 'shared';\nimport SortableList from 'shared/SortableList';\nimport ProjectSectionForm from 'project/ProjectSectionForm';\n\nconst messages = {\n  cancel: 'Cancel',\n  saveChanges: 'Save Changes',\n};\n\nexport default function ProjectSettings({\n  project,\n  updateProject,\n  toggleEditing,\n}) {\n  const [projectState, updateProjectState] = useState(project);\n  const { sections } = projectState;\n  function saveChanges() {\n    updateProject(projectState);\n    toggleEditing();\n  }\n  return (\n    <div>\n      <SortableList\n        defaultItems={sections}\n        onReorder={sections => updateProjectState({ ...project, sections })}\n        renderItem={({ name }) => <strong>{name}</strong>}\n      />\n      <ProjectSectionForm\n        project={projectState}\n        saveNewSection={newSection => {\n          updateProjectState({\n            id: project.id,\n            sections: [...sections, newSection],\n          });\n        }}\n      />\n      <button onClick={saveChanges}>{messages.saveChanges}</button>\n      <button onClick={toggleEditing}>{messages.cancel}</button>\n    </div>\n  );\n}\n\nProjectSettings.propTypes = {\n  project: projectShape,\n  toggleEditing: PropTypes.func.isRequired,\n  updateProject: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport { Router, Link } from '@reach/router';\nimport { PROJECT_SECTION_NAV } from 'test/ids';\nimport { projectMessages } from 'shared';\nimport NotFound from 'NotFound';\nimport ProjectSection from 'project/ProjectSection';\nimport ProjectOverview from 'project/ProjectOverview';\nimport ProjectSettings from 'project/ProjectSettings';\n\nconst getProjectbyId = createSelector(\n  props => props.projects,\n  props => props.projectId,\n  (projects, projectId) => projects.find(({ id }) => id === projectId)\n);\n\nexport default function Project(props) {\n  const [isEditingSections, setEditingSections] = useState(false);\n  const project = getProjectbyId(props);\n  const { updateProject, updateProjectSection } = props;\n\n  if (!project) return <NotFound />;\n\n  const projectNavigation = (\n    <ul data-testid={PROJECT_SECTION_NAV}>\n      <li>\n        <Link to=\"./\">{projectMessages.overviewLink}</Link>\n      </li>\n      {project.sections.map(({ id, name }, index) => (\n        <li key={id}>\n          <Link to={id}>{name}</Link>\n        </li>\n      ))}\n      <li>\n        <button onClick={() => setEditingSections(true)}>\n          Edit project sections\n        </button>\n      </li>\n    </ul>\n  );\n\n  const projectSettings = (\n    <ProjectSettings\n      project={project}\n      toggleEditing={() => setEditingSections(false)}\n      updateProject={updateProject}\n    />\n  );\n\n  return (\n    <div>\n      <Router>\n        <ProjectOverview default project={project} />\n        {project.sections.map((section, index) => (\n          <ProjectSection\n            key={section.id}\n            path={section.id}\n            project={project}\n            updateProjectSection={updateProjectSection}\n            {...section}\n          />\n        ))}\n      </Router>\n\n      {isEditingSections ? projectSettings : projectNavigation}\n    </div>\n  );\n}\n\nProject.propTypes = {\n  updateProject: PropTypes.func,\n};\n\nProject.defaultProps = {\n  updateProject: () => null,\n};\n","import { PROJECT_SECTIONS_DEFAULT } from 'shared';\n\nexport const projects = 'abce'.split('').map(p => ({\n  id: `project-${p}`,\n  name: `Project ${p.toUpperCase()}`,\n  details: `Details about project ${p.toUpperCase()}`,\n  sections: PROJECT_SECTIONS_DEFAULT,\n}));\n","import React, { useState, useEffect } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Dashboard from 'dashboard';\nimport Project from 'project';\nimport NotFound from 'NotFound';\nimport { Router, Link } from '@reach/router';\nimport { projects as demoProjects } from 'test/fixtures';\nimport { makeRoutePath } from 'utils/routing';\nimport Loader from 'shared/Loader';\nimport { homepage } from '../package.json';\nimport { saveProjects, useDropboxClient } from 'shared';\nimport 'App.css';\n\nconst HOME_PATH = makeRoutePath('/');\nconst Home = () => <div>Home</div>;\n\nlet lastProjectsState;\n\nfunction removeHash() {\n  window.history.pushState(\n    '',\n    document.title,\n    window.location.pathname + window.location.search\n  );\n}\n\nfunction AccountNav({ client, authUrl, logout }) {\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (client) {\n      removeHash();\n      client.usersGetCurrentAccount().then(setUserInfo);\n    }\n  }, []);\n\n  if (!client) {\n    return <a href={authUrl}>Login to Dropbox</a>;\n  }\n\n  return userInfo ? (\n    <div>\n      <div>\n        <h2>{userInfo.name.familiar_name}</h2>\n        <img\n          style={{ borderRadius: '50%' }}\n          with={50}\n          height={50}\n          src={userInfo.profile_photo_url}\n          alt={userInfo.name.display_name}\n        />\n        <button onClick={logout}>Logout</button>\n      </div>\n    </div>\n  ) : (\n    <Loader />\n  );\n}\n\nexport default function App({ defaultProjects = demoProjects }) {\n  const [debugState, setDebugState] = useState(false);\n  const db = useDropboxClient();\n  const { client, updateDatabase } = db;\n  lastProjectsState = defaultProjects;\n  const [projects, setProjects] = useState(defaultProjects);\n\n  useEffect(\n    () => {\n      if (!client) {\n        window.location.href =\n          process.env.NODE_ENV === 'production'\n            ? homepage\n            : window.location.origin;\n      }\n    },\n    [client]\n  );\n\n  function updateProject(projectUpdate) {\n    setProjects(\n      projects.map(project => {\n        if (project.id === projectUpdate.id) {\n          return {\n            ...project,\n            ...projectUpdate,\n          };\n        }\n        return project;\n      })\n    );\n  }\n\n  function updateProjectSection(projectId, sectionId, update) {\n    const project = projects.find(({ id }) => id === projectId);\n    const section = project.sections.find(s => s.id === sectionId);\n    if (project && section) {\n      console.log('project', project);\n      console.log('updateProjectSection', projectId, sectionId, section);\n      updateProject({\n        ...project,\n        sections: project.sections.map(section => {\n          delete section.editorContent;\n          return section.id === sectionId\n            ? {\n                ...section,\n                ...update,\n              }\n            : section;\n        }),\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (client && !isEqual(lastProjectsState, projects)) {\n      saveProjects(projects);\n      updateDatabase({ data: { projects } });\n      lastProjectsState = projects;\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header>\n        Anni Project Manager Application\n        <ul>\n          <li>\n            <Link to={HOME_PATH}>Home</Link>\n          </li>\n          {client && (\n            <li>\n              <Link to={makeRoutePath('dashboard')}>Dashboard</Link>\n            </li>\n          )}\n          <li>\n            <AccountNav {...db} />\n          </li>\n        </ul>\n      </header>\n      <Router>\n        <Home path={makeRoutePath('/')} />\n        <Dashboard\n          path={makeRoutePath('dashboard')}\n          projects={projects}\n          setProjects={setProjects}\n        />\n        <Project\n          path={makeRoutePath(':projectId/*')}\n          projects={projects}\n          updateProject={updateProject}\n          updateProjectSection={updateProjectSection}\n        />\n        <NotFound default />\n      </Router>\n      <footer\n        style={{\n          padding: '100px 20px',\n          background: 'MintCream',\n          float: 'right',\n        }}\n      >\n        <button onClick={() => setDebugState(!debugState)}>Debug State</button>\n        {debugState && (\n          <pre style={{ background: 'lavender', padding: 10 }}>\n            {JSON.stringify(projects, null, 2)}\n          </pre>\n        )}\n      </footer>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { getProjects, useDropboxClient } from 'shared';\nimport ApplicationProvider from 'Providers';\nimport './index.css';\nimport App from './App';\nimport Loader from 'shared/Loader';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootEl = document.getElementById('root');\n\nfunction PresentationPanel({ children }) {\n  return <div className=\"PresentationPanel\">{children}</div>;\n}\n\nfunction LandingPage() {\n  const { authUrl } = useDropboxClient();\n  return (\n    <PresentationPanel>\n      <div>\n        <h1>Anni</h1>\n        <a href={authUrl}>Login with Dropbox</a>\n      </div>\n    </PresentationPanel>\n  );\n}\n\nfunction ApplicationLoader() {\n  const { client, readDatabase } = useDropboxClient();\n  const [projects, setProjects] = useState(null);\n  useEffect(() => {\n    if (client) {\n      readDatabase().then(database => {\n        if (database) {\n          setProjects(database.projects);\n        } else {\n          getProjects().then(setProjects);\n        }\n      });\n    }\n  }, []);\n\n  if (!client) {\n    return <LandingPage />;\n  }\n\n  if (!projects) {\n    return (\n      <PresentationPanel>\n        <Loader />\n      </PresentationPanel>\n    );\n  }\n  return (\n    <ApplicationProvider>\n      <App defaultProjects={projects} />\n    </ApplicationProvider>\n  );\n}\n\nReactDOM.render(\n  <ApplicationProvider>\n    <ApplicationLoader />\n  </ApplicationProvider>,\n  rootEl\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}